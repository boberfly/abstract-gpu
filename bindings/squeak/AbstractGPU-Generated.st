SharedPool subclass: #AGPUConstants	instanceVariableNames: ''	classVariableNames: 'AGPU_VR_BUTTON_STEAM_VR_TOUCHPAD AGPU_VR_BUTTON_DPAD_UP AGPU_TEXTURE_FORMAT_R10G10B10A2_UNORM AGPU_FEATURE_COMMAND_LIST_REUSE AGPU_WRITE_ONLY AGPU_TEXTURE_FORMAT_ASTC10X10_UNORM AGPU_TEXTURE_FORMAT_ASTC10X6_UNORM AGPU_VR_TRACKED_DEVICE_CLASS_CONTROLLER AGPU_TEXTURE_FORMAT_R16_UINT AGPU_TEXTURE_FORMAT_BC5_TYPELESS AGPU_FEATURE_VRDISPLAY AGPU_TEXTURE_FORMAT_ASTC5X5_UNORM_SRGB AGPU_VR_BUTTON_DPAD_LEFT AGPU_LINE_STRIP AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_ROLE_CHANGED AGPU_NEVER AGPU_TEXTURE_FORMAT_R8G8B8A8_TYPELESS AGPU_TEXTURE_FORMAT_R32_SINT AGPU_VR_EVENT_TYPE_BUTTON_UNTOUCH AGPU_TESSELLATION_EVALUATION_SHADER AGPU_TEXTURE_FORMAT_ASTC8X6_UNORM_SRGB AGPU_TESSELLATION_CONTROL_SHADER AGPU_TEXTURE_FORMAT_R16_FLOAT AGPU_COMMAND_QUEUE_TYPE_TRANSFER AGPU_TEXTURE_FORMAT_R16G16B16A16_SINT AGPU_TEXTURE_FLAG_READED_BACK AGPU_LINE_STRIP_ADJACENCY AGPU_VR_TRACKED_DEVICE_CLASS_INVALID AGPU_TEXTURE_FORMAT_ASTC6X6_UNORM AGPU_BLENDING_OPERATION_MIN AGPU_BLENDING_DEST_COLOR AGPU_TEXTURE_FORMAT_R16G16_SINT AGPU_VR_EYE_RIGHT AGPU_TEXTURE_FORMAT_R32_TYPELESS AGPU_BLENDING_INVERTED_SRC_1COLOR AGPU_FILTER_MIN_NEAREST_MAG_LINEAR_MIPMAP_LINEAR AGPU_TEXTURE_FORMAT_R10G10B10A2_TYPELESS AGPU_VERTEX_SHADER AGPU_LIBRARY_SHADER AGPU_FILTER_MIN_NEAREST_MAG_NEAREST_MIPMAP_NEAREST AGPU_VR_TRACKED_DEVICE_CLASS_DISPLAY_REDIRECT AGPU_TEXTURE_ASPECT_COLOR AGPU_FEATURE_PERSISTENT_COHERENT_MEMORY_MAPPING AGPU_TEXTURE_FORMAT_R8G8_SNORM AGPU_TEXTURE_ASPECT_ALL AGPU_COMPUTE_SHADER AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A8_UNORM_SRGB AGPU_SHADER_BINDING_TYPE_UNIFORM_BUFFER AGPU_TEXTURE_FORMAT_R8_TYPELESS AGPU_SHADER_BINDING_TYPE_STORAGE_BUFFER AGPU_TEXTURE_FORMAT_R32G8X24_TYPELESS AGPU_TEXTURE_FORMAT_R8G8_UINT AGPU_VR_EVENT_TYPE_BUTTON_TOUCH AGPU_VR_BUTTON_DASHBOARD_BACK AGPU_TEXTURE_FORMAT_EAC_R11G11_UNORM AGPU_DEPTH_BUFFER_BIT AGPU_TEXTURE_FORMAT_R16G16_UINT AGPU_OUT_OF_BOUNDS AGPU_MAP_DYNAMIC_STORAGE_BIT AGPU_VR_EVENT_TYPE_ENTER_STANDBY_MODE AGPU_TEXTURE_FORMAT_BC1_TYPELESS AGPU_TEXTURE_FORMAT_R32G32_FLOAT AGPU_TEXTURE_FORMAT_R8_UINT AGPU_TEXTURE_FORMAT_ASTC12X12_UNORM AGPU_TEXTURE_FORMAT_R8G8B8A8_UNORM AGPU_COMPONENT_SWIZZLE_ONE AGPU_VR_EVENT_TYPE_INVALID AGPU_BLENDING_INVERTED_SRC_COLOR AGPU_TEXTURE_FORMAT_R8G8B8A8_SNORM AGPU_TEXTURE_FORMAT_B8G8R8A8_TYPELESS AGPU_COMMAND_LIST_TYPE_BUNDLE AGPU_VR_BUTTON_KNUCKLES_B AGPU_TEXTURE_FORMAT_R16_SINT AGPU_OK AGPU_TRIANGLES_ADJACENCY AGPU_TEXTURE_FLAG_STENCIL AGPU_GEOMETRY_SHADER AGPU_TEXTURE_FORMAT_R16G16B16A16_UNORM AGPU_TEXTURE_CUBE AGPU_SHADER_LANGUAGE_NONE AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_USER_INTERACTION_ENDED AGPU_FEATURE_NON_EMULATED_COMMAND_LIST_REUSE AGPU_TEXTURE_FORMAT_ASTC8X8_UNORM_SRGB AGPU_VR_EVENT_TYPE_DUAL_ANALOG_RELEASED AGPU_TEXTURE_FORMAT_R32_FLOAT_S8X24_TYPELESS AGPU_INT AGPU_BLENDING_SRC_ALPHA_SAT AGPU_TEXTURE_ADDRESS_MODE_BORDER AGPU_TEXTURE_1D AGPU_TEXTURE_FORMAT_ASTC5X5_UNORM AGPU_MAP_WRITE_BIT AGPU_TEXTURE_FORMAT_ETC2_R8G8B8_UNORM AGPU_GREATER AGPU_TEXTURE_FLAG_UPLOADED AGPU_TEXTURE_FORMAT_D32_FLOAT AGPU_FEATURE_COHERENT_MEMORY_MAPPING AGPU_SHADER_LANGUAGE_HLSL AGPU_TEXTURE_FORMAT_R8G8_UNORM AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A1_UNORM AGPU_COMPONENT_SWIZZLE_R AGPU_TRIANGLE_STRIP AGPU_SHADER_LANGUAGE_EGLSL AGPU_TEXTURE_FORMAT_R32G32B32A32_TYPELESS AGPU_ELEMENT_ARRAY_BUFFER AGPU_COMPONENT_SWIZZLE_G AGPU_TEXTURE_ASPECT_STENCIL AGPU_COMPONENT_SWIZZLE_B AGPU_COMPONENT_SWIZZLE_A AGPU_TEXTURE_FORMAT_R16_UNORM AGPU_TEXTURE_UNKNOWN AGPU_TEXTURE_FORMAT_BC2_UNORM AGPU_TEXTURE_FORMAT_BC2_TYPELESS AGPU_TEXTURE_FORMAT_BC4_SNORM AGPU_TEXTURE_FORMAT_R32G32B32A32_FLOAT AGPU_TEXTURE_FORMAT_R16G16_UNORM AGPU_BLENDING_SRC_ALPHA AGPU_VR_BUTTON_KNUCKLES_JOY_STICK AGPU_TEXTURE_FORMAT_R16G16B16A16_FLOAT AGPU_TEXTURE_FORMAT_ASTC4X4_UNORM_SRGB AGPU_BLENDING_INVERTED_SRC_ALPHA AGPU_LINES_ADJACENCY AGPU_TEXTURE_FORMAT_R8_UNORM AGPU_FILTER_ANISOTROPIC AGPU_UNIMPLEMENTED AGPU_TEXTURE_FORMAT_ASTC6X6_UNORM_SRGB AGPU_DECREASE AGPU_FRAGMENT_SHADER AGPU_TEXTURE_FORMAT_R32G32B32_FLOAT AGPU_STORAGE_BUFFER AGPU_BLENDING_ZERO AGPU_TEXTURE_FORMAT_X32_TYPELESS_G8X24_UINT AGPU_TEXTURE_FORMAT_B8G8R8X8_UNORM_SRGB AGPU_TEXTURE_FORMAT_ASTC8X5_UNORM_SRGB AGPU_VR_TRACKED_DEVICE_ROLE_LEFT_HAND AGPU_TEXTURE_FORMAT_ASTC5X4_UNORM_SRGB AGPU_TEXTURE_FORMAT_ETC2_R8G8B8_UNORM_SRGB AGPU_MAP_PERSISTENT_BIT AGPU_VR_TRACKED_DEVICE_CLASS_GENERIC_TRACKER AGPU_BLENDING_SRC_1ALPHA AGPU_VR_EVENT_TYPE_DUAL_ANALOG_TOUCH AGPU_BLENDING_SRC_COLOR AGPU_VR_EVENT_TYPE_WIRELESS_DISCONNECT AGPU_TEXTURE_ADDRESS_MODE_CLAMP AGPU_FEATURE_PERSISTENT_MEMORY_MAPPING AGPU_TEXTURE_FORMAT_ASTC12X10_UNORM AGPU_VR_BUTTON_DPAD_DOWN AGPU_VR_EVENT_TYPE_BUTTON_PRESSED AGPU_TEXTURE_FORMAT_R16G16_SNORM AGPU_BLENDING_SRC_1COLOR AGPU_TEXTURE_FORMAT_ASTC10X5_UNORM AGPU_POLYGON_MODE_FILL AGPU_TEXTURE_ADDRESS_MODE_MIRROR_ONCE AGPU_TEXTURE_FORMAT_ASTC10X8_UNORM_SRGB AGPU_ARRAY_BUFFER AGPU_TEXTURE_FORMAT_R8G8B8A8_SINT AGPU_VR_TRACKED_DEVICE_CLASS_TRACKING_REFERENCE AGPU_TEXTURE_FORMAT_BC3_UNORM AGPU_FIXED AGPU_READ_ONLY AGPU_STATIC AGPU_TEXTURE_FORMAT_ASTC10X10_UNORM_SRGB AGPU_VR_EVENT_TYPE_DUAL_ANALOG_MODE_SWITCH_1 AGPU_VR_EVENT_TYPE_DUAL_ANALOG_MODE_SWITCH_2 AGPU_BLENDING_INVERTED_CONSTANT_FACTOR AGPU_INCREASE_WRAP AGPU_TEXTURE_FLAG_RENDERBUFFER_ONLY AGPU_VR_DUAL_ANALOG_RIGHT AGPU_ERROR AGPU_CULL_MODE_FRONT_AND_BACK AGPU_TEXTURE_FLAG_NONE AGPU_TEXTURE_FORMAT_ASTC5X4_UNORM AGPU_TEXTURE_FORMAT_BC5_UNORM AGPU_TEXTURE_FORMAT_R8G8_TYPELESS AGPU_FILTER_MIN_NEAREST_MAG_NEAREST_MIPMAP_LINEAR AGPU_SHADER_BINDING_TYPE_COUNT AGPU_TEXTURE_FORMAT_ASTC8X5_UNORM AGPU_VR_EVENT_TYPE_DUAL_ANALOG_CANCEL AGPU_ATTACHMENT_DISCARD AGPU_SHADER_LANGUAGE_GLSL AGPU_BLENDING_ONE AGPU_REPLACE AGPU_TEXTURE_FORMAT_ASTC8X8_UNORM AGPU_TEXTURE_FORMAT_R32_FLOAT AGPU_TEXTURE_FORMAT_BC1_UNORM_SRGB AGPU_TEXTURE_FORMAT_BC3_TYPELESS AGPU_LINES AGPU_TEXTURE_FORMAT_R8_SINT AGPU_TEXTURE_FORMAT_BC1_UNORM AGPU_UNIFORM_TEXEL_BUFFER AGPU_TEXTURE_FORMAT_R32G32_TYPELESS AGPU_COMMAND_LIST_TYPE_COMPUTE AGPU_TEXTURE_FORMAT_R32G32_UINT AGPU_CULL_MODE_FRONT AGPU_VR_EVENT_TYPE_BUTTON_RELEASED AGPU_TEXTURE_FLAG_STORAGE AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_UPDATED AGPU_INVALID_OPERATION AGPU_VR_TRACKED_DEVICE_ROLE_OPT_OUT AGPU_TEXTURE_ADDRESS_MODE_MIRROR AGPU_COMPUTE_DISPATCH_INDIRECT_BUFFER AGPU_SHADER_BINDING_TYPE_STORAGE_TEXEL_BUFFER AGPU_TEXTURE_FORMAT_R32G32_SINT AGPU_TEXTURE_FORMAT_B8G8R8A8_UNORM_SRGB AGPU_VR_BUTTON_APPLICATION_MENU AGPU_TEXTURE_FORMAT_BC3_UNORM_SRGB AGPU_TEXTURE_FORMAT_R16G16_TYPELESS AGPU_POLYGON_MODE_POINT AGPU_CULL_MODE_NONE AGPU_COMMAND_LIST_TYPE_COPY AGPU_VR_BUTTON_AXIS_1 AGPU_VR_BUTTON_AXIS_0 AGPU_VR_BUTTON_AXIS_3 AGPU_VR_BUTTON_AXIS_2 AGPU_VR_BUTTON_AXIS_4 AGPU_VR_TRACKED_DEVICE_CLASS_HMD AGPU_TEXTURE_FORMAT_ASTC12X12_UNORM_SRGB AGPU_TEXTURE_FORMAT_R10G10B10A2_UINT AGPU_UNSIGNED_SHORT AGPU_TEXTURE_2D AGPU_TEXTURE_FORMAT_B8G8R8X8_TYPELESS AGPU_FILTER_MIN_LINEAR_MAG_NEAREST_MIPMAP_LINEAR AGPU_TEXTURE_FORMAT_R32_UINT AGPU_TEXTURE_FORMAT_EAC_R11_UNORM AGPU_TEXTURE_FORMAT_R16G16B16A16_SNORM AGPU_LINKING_ERROR AGPU_GENERIC_DATA_BUFFER AGPU_COMMAND_LIST_TYPE_DIRECT AGPU_TEXTURE_FORMAT_B8G8R8A8_UNORM AGPU_SHADER_LANGUAGE_METAL_AIR AGPU_TEXTURE_FORMAT_R32G32B32_TYPELESS AGPU_FILTER_MIN_NEAREST_MAG_LINEAR_MIPMAP_NEAREST AGPU_TEXTURE_FORMAT_EAC_R11_SNORM AGPU_UNSIGNED_BYTE AGPU_VR_TRACKED_DEVICE_ROLE_RIGHT_HAND AGPU_BYTE AGPU_VR_BUTTON_DPAD_RIGHT AGPU_TEXTURE_FORMAT_R8G8B8A8_UINT AGPU_SHADER_LANGUAGE_METAL AGPU_BLENDING_CONSTANT_FACTOR AGPU_ALWAYS AGPU_TEXTURE_FLAG_RENDER_TARGET AGPU_COMPONENT_SWIZZLE_ZERO AGPU_HALF_FLOAT AGPU_SHORT AGPU_TEXTURE_FORMAT_R32G32B32A32_SINT AGPU_CLOCKWISE AGPU_TEXTURE_FORMAT_R8G8B8A8_UNORM_SRGB AGPU_TEXTURE_FORMAT_R32G32B32A32_UINT AGPU_TEXTURE_FORMAT_R24G8_TYPELESS AGPU_SHADER_BINDING_TYPE_SAMPLER AGPU_COMMAND_QUEUE_TYPE_COMPUTE AGPU_TEXTURE_FORMAT_B8G8R8X8_UNORM AGPU_TEXTURE_FORMAT_B5G6R5_UNORM AGPU_READ_WRITE AGPU_STREAM AGPU_TRIANGLE_STRIP_ADJACENCY AGPU_INVERT AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_ACTIVATED AGPU_TEXTURE_FORMAT_X24TG8_UINT AGPU_BLENDING_OPERATION_REVERSE_SUBTRACT AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_DEACTIVATED AGPU_TEXTURE_FORMAT_BC5_SNORM AGPU_INCREASE AGPU_COMPONENT_SWIZZLE_IDENTITY AGPU_TEXTURE_FORMAT_ASTC6X5_UNORM_SRGB AGPU_TEXTURE_FORMAT_ASTC10X8_UNORM AGPU_KEEP AGPU_TEXTURE_FORMAT_R32G32B32_SINT AGPU_SHADER_LANGUAGE_SPIR_V AGPU_EQUAL AGPU_ATTACHMENT_KEEP AGPU_VR_EVENT_TYPE_IPD_CHANGED AGPU_BLENDING_OPERATION_SUBTRACT AGPU_TEXTURE_FORMAT_R1_UNORM AGPU_NOT_CURRENT_CONTEXT AGPU_TEXTURE_FORMAT_R11G11B10_FLOAT AGPU_TEXTURE_FORMAT_B5G5R5A1_UNORM AGPU_TEXTURE_FORMAT_BC4_UNORM AGPU_TEXTURE_FORMAT_ASTC12X10_UNORM_SRGB AGPU_COUNTER_CLOCKWISE AGPU_VR_EVENT_TYPE_WIRELESS_RECONNECT AGPU_UNSIGNED_INT AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A1_UNORM_SRGB AGPU_FILTER_MIN_LINEAR_MAG_LINEAR_MIPMAP_NEAREST AGPU_STENCIL_BUFFER_BIT AGPU_BLENDING_INVERTED_DEST_ALPHA AGPU_MAP_READ_BIT AGPU_TEXTURE_FORMAT_ASTC10X5_UNORM_SRGB AGPU_VR_EYE_LEFT AGPU_TRIANGLES AGPU_BLENDING_INVERTED_DEST_COLOR AGPU_SHADER_LANGUAGE_BINARY AGPU_COMPILATION_ERROR AGPU_TEXTURE_FORMAT_R16G16B16A16_UINT AGPU_FILTER_MIN_LINEAR_MAG_LINEAR_MIPMAP_LINEAR AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A8_UNORM AGPU_BLENDING_INVERTED_SRC_1ALPHA AGPU_BLENDING_DEST_ALPHA AGPU_TEXTURE_FORMAT_R16_TYPELESS AGPU_UNIFORM_BUFFER AGPU_TEXTURE_FORMAT_ASTC10X6_UNORM_SRGB AGPU_VR_BUTTON_PROXIMITY_SENSOR AGPU_TEXTURE_3D AGPU_TEXTURE_FORMAT_UNKNOWN AGPU_TEXTURE_FORMAT_R24_UNORM_X8_TYPELESS AGPU_TEXTURE_BUFFER AGPU_VR_DUAL_ANALOG_LEFT AGPU_TEXTURE_FORMAT_D32_FLOAT_S8X24_UINT AGPU_BLENDING_OPERATION_MAX AGPU_CULL_MODE_BACK AGPU_FLOAT AGPU_VR_TRACKED_DEVICE_ROLE_THREADMILL AGPU_VR_EVENT_TYPE_DUAL_ANALOG_UNTOUCH AGPU_TEXTURE_FORMAT_R8_SNORM AGPU_TEXTURE_FORMAT_ASTC4X4_UNORM AGPU_POLYGON_MODE_LINE AGPU_TEXTURE_FORMAT_R16G16B16A16_TYPELESS AGPU_TEXTURE_ADDRESS_MODE_WRAP AGPU_VR_BUTTON_A AGPU_DYNAMIC AGPU_STORAGE_TEXEL_BUFFER AGPU_TEXTURE_FORMAT_A8_UNORM AGPU_TEXTURE_FORMAT_EAC_R11G11_SNORM AGPU_LESS AGPU_SHADER_LANGUAGE_VGLSL AGPU_PATCHES AGPU_VR_BUTTON_GRIP AGPU_TEXTURE_ASPECT_DEPTH AGPU_INVALID_PARAMETER AGPU_TEXTURE_FORMAT_ASTC6X5_UNORM AGPU_TEXTURE_FLAG_DEPTH AGPU_SHADER_BINDING_TYPE_UNIFORM_TEXEL_BUFFER AGPU_GREATER_EQUAL AGPU_TEXTURE_FORMAT_D24_UNORM_S8_UINT AGPU_TEXTURE_FORMAT_D16_UNORM AGPU_NULL_POINTER AGPU_ZERO AGPU_POINTS AGPU_SHADER_BINDING_TYPE_SAMPLED_IMAGE AGPU_DOUBLE AGPU_TEXTURE_FORMAT_R16_SNORM AGPU_VR_TRACKED_DEVICE_ROLE_INVALID AGPU_TEXTURE_FORMAT_BC4_TYPELESS AGPU_LESS_EQUAL AGPU_COLOR_BUFFER_BIT AGPU_TEXTURE_FORMAT_R16G16_FLOAT AGPU_DEVICE_OPEN_FLAG_NONE AGPU_BLENDING_OPERATION_ADD AGPU_MAP_COHERENT_BIT AGPU_FEATURE_VRINPUT_DEVICES AGPU_NOT_EQUAL AGPU_SHADER_BINDING_TYPE_STORAGE_IMAGE AGPU_VR_EVENT_TYPE_DUAL_ANALOG_MOVE AGPU_TEXTURE_FORMAT_R8G8_SINT AGPU_UNSUPPORTED AGPU_TEXTURE_FORMAT_BC2_UNORM_SRGB AGPU_TEXTURE_FORMAT_ASTC8X6_UNORM AGPU_VR_EVENT_TYPE_DUAL_ANALOG_PRESSED AGPU_ATTACHMENT_CLEAR AGPU_FILTER_MIN_LINEAR_MAG_NEAREST_MIPMAP_NEAREST AGPU_COMMAND_QUEUE_TYPE_GRAPHICS AGPU_COMMAND_LIST_CLOSED AGPU_VR_BUTTON_STEAM_VR_TRIGGER AGPU_DECREASE_WRAP AGPU_TEXTURE_FORMAT_R32G32B32_UINT AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_USER_INTERACTION_STARTED AGPU_DEVICE_OPEN_FLAG_ALLOW_VR AGPU_VR_BUTTON_SYSTEM AGPU_DRAW_INDIRECT_BUFFER AGPU_VR_EVENT_TYPE_LEAVE_STANDBY_MODE AGPU_VR_BUTTON_KNUCKLES_A'	poolDictionaries: ''	category: 'AbstractGPU-Generated'!!AGPUConstants class methodsFor: 'initialize'!initialize"	self initialize"	super initialize.
    self data pairsDo: [:k :v |
        self classPool at: k put: v
    ]
! !!AGPUConstants class methodsFor: 'initialization'!data	^ #(		AGPU_VR_BUTTON_STEAM_VR_TOUCHPAD 32		AGPU_VR_BUTTON_DPAD_UP 4		AGPU_TEXTURE_FORMAT_R10G10B10A2_UNORM 24		AGPU_FEATURE_COMMAND_LIST_REUSE 4		AGPU_WRITE_ONLY 2		AGPU_TEXTURE_FORMAT_ASTC10X10_UNORM 252		AGPU_TEXTURE_FORMAT_ASTC10X6_UNORM 248		AGPU_VR_TRACKED_DEVICE_CLASS_CONTROLLER 2		AGPU_TEXTURE_FORMAT_R16_UINT 57		AGPU_TEXTURE_FORMAT_BC5_TYPELESS 82		AGPU_FEATURE_VRDISPLAY 6		AGPU_TEXTURE_FORMAT_ASTC5X5_UNORM_SRGB 235		AGPU_VR_BUTTON_DPAD_LEFT 3		AGPU_LINE_STRIP 3		AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_ROLE_CHANGED 108		AGPU_NEVER 1		AGPU_TEXTURE_FORMAT_R8G8B8A8_TYPELESS 27		AGPU_TEXTURE_FORMAT_R32_SINT 43		AGPU_VR_EVENT_TYPE_BUTTON_UNTOUCH 203		AGPU_TESSELLATION_EVALUATION_SHADER 5		AGPU_TEXTURE_FORMAT_ASTC8X6_UNORM_SRGB 243		AGPU_TESSELLATION_CONTROL_SHADER 4		AGPU_TEXTURE_FORMAT_R16_FLOAT 54		AGPU_COMMAND_QUEUE_TYPE_TRANSFER 2		AGPU_TEXTURE_FORMAT_R16G16B16A16_SINT 14		AGPU_TEXTURE_FLAG_READED_BACK 32		AGPU_LINE_STRIP_ADJACENCY 4		AGPU_VR_TRACKED_DEVICE_CLASS_INVALID 0		AGPU_TEXTURE_FORMAT_ASTC6X6_UNORM 238		AGPU_BLENDING_OPERATION_MIN 4		AGPU_BLENDING_DEST_COLOR 9		AGPU_TEXTURE_FORMAT_R16G16_SINT 38		AGPU_VR_EYE_RIGHT 1		AGPU_TEXTURE_FORMAT_R32_TYPELESS 39		AGPU_BLENDING_INVERTED_SRC_1COLOR 17		AGPU_FILTER_MIN_NEAREST_MAG_LINEAR_MIPMAP_LINEAR 16r5		AGPU_TEXTURE_FORMAT_R10G10B10A2_TYPELESS 23		AGPU_VERTEX_SHADER 0		AGPU_LIBRARY_SHADER 6		AGPU_FILTER_MIN_NEAREST_MAG_NEAREST_MIPMAP_NEAREST 16r0		AGPU_VR_TRACKED_DEVICE_CLASS_DISPLAY_REDIRECT 5		AGPU_TEXTURE_ASPECT_COLOR 1		AGPU_FEATURE_PERSISTENT_COHERENT_MEMORY_MAPPING 3		AGPU_TEXTURE_FORMAT_R8G8_SNORM 51		AGPU_TEXTURE_ASPECT_ALL -1		AGPU_COMPUTE_SHADER 3		AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A8_UNORM_SRGB 205		AGPU_SHADER_BINDING_TYPE_UNIFORM_BUFFER 4		AGPU_TEXTURE_FORMAT_R8_TYPELESS 60		AGPU_SHADER_BINDING_TYPE_STORAGE_BUFFER 5		AGPU_TEXTURE_FORMAT_R32G8X24_TYPELESS 19		AGPU_TEXTURE_FORMAT_R8G8_UINT 50		AGPU_VR_EVENT_TYPE_BUTTON_TOUCH 202		AGPU_VR_BUTTON_DASHBOARD_BACK 2		AGPU_TEXTURE_FORMAT_EAC_R11G11_UNORM 208		AGPU_DEPTH_BUFFER_BIT 1		AGPU_TEXTURE_FORMAT_R16G16_UINT 36		AGPU_OUT_OF_BOUNDS -5		AGPU_MAP_DYNAMIC_STORAGE_BIT 16		AGPU_VR_EVENT_TYPE_ENTER_STANDBY_MODE 106		AGPU_TEXTURE_FORMAT_BC1_TYPELESS 70		AGPU_TEXTURE_FORMAT_R32G32_FLOAT 16		AGPU_TEXTURE_FORMAT_R8_UINT 62		AGPU_TEXTURE_FORMAT_ASTC12X12_UNORM 256		AGPU_TEXTURE_FORMAT_R8G8B8A8_UNORM 28		AGPU_COMPONENT_SWIZZLE_ONE 1		AGPU_VR_EVENT_TYPE_INVALID 0		AGPU_BLENDING_INVERTED_SRC_COLOR 4		AGPU_TEXTURE_FORMAT_R8G8B8A8_SNORM 31		AGPU_TEXTURE_FORMAT_B8G8R8A8_TYPELESS 90		AGPU_COMMAND_LIST_TYPE_BUNDLE 2		AGPU_VR_BUTTON_KNUCKLES_B 1		AGPU_TEXTURE_FORMAT_R16_SINT 59		AGPU_OK 0		AGPU_TRIANGLES_ADJACENCY 6		AGPU_TEXTURE_FLAG_STENCIL 4		AGPU_GEOMETRY_SHADER 2		AGPU_TEXTURE_FORMAT_R16G16B16A16_UNORM 11		AGPU_TEXTURE_CUBE 4		AGPU_SHADER_LANGUAGE_NONE 0		AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_USER_INTERACTION_ENDED 104		AGPU_FEATURE_NON_EMULATED_COMMAND_LIST_REUSE 5		AGPU_TEXTURE_FORMAT_ASTC8X8_UNORM_SRGB 245		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_RELEASED 251		AGPU_TEXTURE_FORMAT_R32_FLOAT_S8X24_TYPELESS 21		AGPU_INT 8		AGPU_BLENDING_SRC_ALPHA_SAT 11		AGPU_TEXTURE_ADDRESS_MODE_BORDER 4		AGPU_TEXTURE_1D 2		AGPU_TEXTURE_FORMAT_ASTC5X5_UNORM 234		AGPU_MAP_WRITE_BIT 2		AGPU_TEXTURE_FORMAT_ETC2_R8G8B8_UNORM 200		AGPU_GREATER 6		AGPU_TEXTURE_FLAG_UPLOADED 64		AGPU_TEXTURE_FORMAT_D32_FLOAT 40		AGPU_FEATURE_COHERENT_MEMORY_MAPPING 2		AGPU_SHADER_LANGUAGE_HLSL 5		AGPU_TEXTURE_FORMAT_R8G8_UNORM 49		AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A1_UNORM 202		AGPU_COMPONENT_SWIZZLE_R 3		AGPU_TRIANGLE_STRIP 7		AGPU_SHADER_LANGUAGE_EGLSL 2		AGPU_TEXTURE_FORMAT_R32G32B32A32_TYPELESS 1		AGPU_ELEMENT_ARRAY_BUFFER 4		AGPU_COMPONENT_SWIZZLE_G 4		AGPU_TEXTURE_ASPECT_STENCIL 4		AGPU_COMPONENT_SWIZZLE_B 5		AGPU_COMPONENT_SWIZZLE_A 6		AGPU_TEXTURE_FORMAT_R16_UNORM 56		AGPU_TEXTURE_UNKNOWN 0		AGPU_TEXTURE_FORMAT_BC2_UNORM 74		AGPU_TEXTURE_FORMAT_BC2_TYPELESS 73		AGPU_TEXTURE_FORMAT_BC4_SNORM 81		AGPU_TEXTURE_FORMAT_R32G32B32A32_FLOAT 2		AGPU_TEXTURE_FORMAT_R16G16_UNORM 35		AGPU_BLENDING_SRC_ALPHA 5		AGPU_VR_BUTTON_KNUCKLES_JOY_STICK 35		AGPU_TEXTURE_FORMAT_R16G16B16A16_FLOAT 10		AGPU_TEXTURE_FORMAT_ASTC4X4_UNORM_SRGB 231		AGPU_BLENDING_INVERTED_SRC_ALPHA 6		AGPU_LINES_ADJACENCY 2		AGPU_TEXTURE_FORMAT_R8_UNORM 61		AGPU_FILTER_ANISOTROPIC 16r55		AGPU_UNIMPLEMENTED -7		AGPU_TEXTURE_FORMAT_ASTC6X6_UNORM_SRGB 239		AGPU_DECREASE 6		AGPU_FRAGMENT_SHADER 1		AGPU_TEXTURE_FORMAT_R32G32B32_FLOAT 6		AGPU_STORAGE_BUFFER 32		AGPU_BLENDING_ZERO 1		AGPU_TEXTURE_FORMAT_X32_TYPELESS_G8X24_UINT 22		AGPU_TEXTURE_FORMAT_B8G8R8X8_UNORM_SRGB 93		AGPU_TEXTURE_FORMAT_ASTC8X5_UNORM_SRGB 241		AGPU_VR_TRACKED_DEVICE_ROLE_LEFT_HAND 1		AGPU_TEXTURE_FORMAT_ASTC5X4_UNORM_SRGB 233		AGPU_TEXTURE_FORMAT_ETC2_R8G8B8_UNORM_SRGB 201		AGPU_MAP_PERSISTENT_BIT 4		AGPU_VR_TRACKED_DEVICE_CLASS_GENERIC_TRACKER 3		AGPU_BLENDING_SRC_1ALPHA 18		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_TOUCH 252		AGPU_BLENDING_SRC_COLOR 3		AGPU_VR_EVENT_TYPE_WIRELESS_DISCONNECT 112		AGPU_TEXTURE_ADDRESS_MODE_CLAMP 3		AGPU_FEATURE_PERSISTENT_MEMORY_MAPPING 1		AGPU_TEXTURE_FORMAT_ASTC12X10_UNORM 254		AGPU_VR_BUTTON_DPAD_DOWN 6		AGPU_VR_EVENT_TYPE_BUTTON_PRESSED 200		AGPU_TEXTURE_FORMAT_R16G16_SNORM 37		AGPU_BLENDING_SRC_1COLOR 16		AGPU_TEXTURE_FORMAT_ASTC10X5_UNORM 246		AGPU_POLYGON_MODE_FILL 0		AGPU_TEXTURE_ADDRESS_MODE_MIRROR_ONCE 5		AGPU_TEXTURE_FORMAT_ASTC10X8_UNORM_SRGB 251		AGPU_ARRAY_BUFFER 2		AGPU_TEXTURE_FORMAT_R8G8B8A8_SINT 32		AGPU_VR_TRACKED_DEVICE_CLASS_TRACKING_REFERENCE 4		AGPU_TEXTURE_FORMAT_BC3_UNORM 77		AGPU_FIXED 3		AGPU_READ_ONLY 1		AGPU_STATIC 0		AGPU_TEXTURE_FORMAT_ASTC10X10_UNORM_SRGB 253		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_MODE_SWITCH_1 255		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_MODE_SWITCH_2 256		AGPU_BLENDING_INVERTED_CONSTANT_FACTOR 15		AGPU_INCREASE_WRAP 5		AGPU_TEXTURE_FLAG_RENDERBUFFER_ONLY 16		AGPU_VR_DUAL_ANALOG_RIGHT 1		AGPU_ERROR -1		AGPU_CULL_MODE_FRONT_AND_BACK 3		AGPU_TEXTURE_FLAG_NONE 0		AGPU_TEXTURE_FORMAT_ASTC5X4_UNORM 232		AGPU_TEXTURE_FORMAT_BC5_UNORM 83		AGPU_TEXTURE_FORMAT_R8G8_TYPELESS 48		AGPU_FILTER_MIN_NEAREST_MAG_NEAREST_MIPMAP_LINEAR 16r1		AGPU_SHADER_BINDING_TYPE_COUNT 7		AGPU_TEXTURE_FORMAT_ASTC8X5_UNORM 240		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_CANCEL 257		AGPU_ATTACHMENT_DISCARD 2		AGPU_SHADER_LANGUAGE_GLSL 1		AGPU_BLENDING_ONE 2		AGPU_REPLACE 2		AGPU_TEXTURE_FORMAT_ASTC8X8_UNORM 244		AGPU_TEXTURE_FORMAT_R32_FLOAT 41		AGPU_TEXTURE_FORMAT_BC1_UNORM_SRGB 72		AGPU_TEXTURE_FORMAT_BC3_TYPELESS 76		AGPU_LINES 1		AGPU_TEXTURE_FORMAT_R8_SINT 64		AGPU_TEXTURE_FORMAT_BC1_UNORM 71		AGPU_UNIFORM_TEXEL_BUFFER 64		AGPU_TEXTURE_FORMAT_R32G32_TYPELESS 15		AGPU_COMMAND_LIST_TYPE_COMPUTE 3		AGPU_TEXTURE_FORMAT_R32G32_UINT 17		AGPU_CULL_MODE_FRONT 1		AGPU_VR_EVENT_TYPE_BUTTON_RELEASED 201		AGPU_TEXTURE_FLAG_STORAGE 8		AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_UPDATED 102		AGPU_INVALID_OPERATION -3		AGPU_VR_TRACKED_DEVICE_ROLE_OPT_OUT 3		AGPU_TEXTURE_ADDRESS_MODE_MIRROR 2		AGPU_COMPUTE_DISPATCH_INDIRECT_BUFFER 256		AGPU_SHADER_BINDING_TYPE_STORAGE_TEXEL_BUFFER 3		AGPU_TEXTURE_FORMAT_R32G32_SINT 18		AGPU_TEXTURE_FORMAT_B8G8R8A8_UNORM_SRGB 91		AGPU_VR_BUTTON_APPLICATION_MENU 1		AGPU_TEXTURE_FORMAT_BC3_UNORM_SRGB 78		AGPU_TEXTURE_FORMAT_R16G16_TYPELESS 33		AGPU_POLYGON_MODE_POINT 2		AGPU_CULL_MODE_NONE 0		AGPU_COMMAND_LIST_TYPE_COPY 4		AGPU_VR_BUTTON_AXIS_1 33		AGPU_VR_BUTTON_AXIS_0 32		AGPU_VR_BUTTON_AXIS_3 35		AGPU_VR_BUTTON_AXIS_2 34		AGPU_VR_BUTTON_AXIS_4 36		AGPU_VR_TRACKED_DEVICE_CLASS_HMD 1		AGPU_TEXTURE_FORMAT_ASTC12X12_UNORM_SRGB 257		AGPU_TEXTURE_FORMAT_R10G10B10A2_UINT 25		AGPU_UNSIGNED_SHORT 7		AGPU_TEXTURE_2D 3		AGPU_TEXTURE_FORMAT_B8G8R8X8_TYPELESS 92		AGPU_FILTER_MIN_LINEAR_MAG_NEAREST_MIPMAP_LINEAR 16r11		AGPU_TEXTURE_FORMAT_R32_UINT 42		AGPU_TEXTURE_FORMAT_EAC_R11_UNORM 206		AGPU_TEXTURE_FORMAT_R16G16B16A16_SNORM 13		AGPU_LINKING_ERROR -9		AGPU_GENERIC_DATA_BUFFER 0		AGPU_COMMAND_LIST_TYPE_DIRECT 1		AGPU_TEXTURE_FORMAT_B8G8R8A8_UNORM 87		AGPU_SHADER_LANGUAGE_METAL_AIR 7		AGPU_TEXTURE_FORMAT_R32G32B32_TYPELESS 5		AGPU_FILTER_MIN_NEAREST_MAG_LINEAR_MIPMAP_NEAREST 16r4		AGPU_TEXTURE_FORMAT_EAC_R11_SNORM 207		AGPU_UNSIGNED_BYTE 5		AGPU_VR_TRACKED_DEVICE_ROLE_RIGHT_HAND 2		AGPU_BYTE 4		AGPU_VR_BUTTON_DPAD_RIGHT 5		AGPU_TEXTURE_FORMAT_R8G8B8A8_UINT 30		AGPU_SHADER_LANGUAGE_METAL 6		AGPU_BLENDING_CONSTANT_FACTOR 14		AGPU_ALWAYS 0		AGPU_TEXTURE_FLAG_RENDER_TARGET 1		AGPU_COMPONENT_SWIZZLE_ZERO 2		AGPU_HALF_FLOAT 1		AGPU_SHORT 6		AGPU_TEXTURE_FORMAT_R32G32B32A32_SINT 4		AGPU_CLOCKWISE 1		AGPU_TEXTURE_FORMAT_R8G8B8A8_UNORM_SRGB 29		AGPU_TEXTURE_FORMAT_R32G32B32A32_UINT 3		AGPU_TEXTURE_FORMAT_R24G8_TYPELESS 44		AGPU_SHADER_BINDING_TYPE_SAMPLER 6		AGPU_COMMAND_QUEUE_TYPE_COMPUTE 1		AGPU_TEXTURE_FORMAT_B8G8R8X8_UNORM 88		AGPU_TEXTURE_FORMAT_B5G6R5_UNORM 85		AGPU_READ_WRITE 3		AGPU_STREAM 2		AGPU_TRIANGLE_STRIP_ADJACENCY 8		AGPU_INVERT 3		AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_ACTIVATED 100		AGPU_TEXTURE_FORMAT_X24TG8_UINT 47		AGPU_BLENDING_OPERATION_REVERSE_SUBTRACT 3		AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_DEACTIVATED 101		AGPU_TEXTURE_FORMAT_BC5_SNORM 84		AGPU_INCREASE 4		AGPU_COMPONENT_SWIZZLE_IDENTITY 0		AGPU_TEXTURE_FORMAT_ASTC6X5_UNORM_SRGB 237		AGPU_TEXTURE_FORMAT_ASTC10X8_UNORM 250		AGPU_KEEP 0		AGPU_TEXTURE_FORMAT_R32G32B32_SINT 8		AGPU_SHADER_LANGUAGE_SPIR_V 4		AGPU_EQUAL 4		AGPU_ATTACHMENT_KEEP 0		AGPU_VR_EVENT_TYPE_IPD_CHANGED 105		AGPU_BLENDING_OPERATION_SUBTRACT 2		AGPU_TEXTURE_FORMAT_R1_UNORM 66		AGPU_NOT_CURRENT_CONTEXT -8		AGPU_TEXTURE_FORMAT_R11G11B10_FLOAT 26		AGPU_TEXTURE_FORMAT_B5G5R5A1_UNORM 86		AGPU_TEXTURE_FORMAT_BC4_UNORM 80		AGPU_TEXTURE_FORMAT_ASTC12X10_UNORM_SRGB 255		AGPU_COUNTER_CLOCKWISE 0		AGPU_VR_EVENT_TYPE_WIRELESS_RECONNECT 113		AGPU_UNSIGNED_INT 9		AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A1_UNORM_SRGB 203		AGPU_FILTER_MIN_LINEAR_MAG_LINEAR_MIPMAP_NEAREST 16r14		AGPU_STENCIL_BUFFER_BIT 2		AGPU_BLENDING_INVERTED_DEST_ALPHA 8		AGPU_MAP_READ_BIT 1		AGPU_TEXTURE_FORMAT_ASTC10X5_UNORM_SRGB 247		AGPU_VR_EYE_LEFT 0		AGPU_TRIANGLES 5		AGPU_BLENDING_INVERTED_DEST_COLOR 10		AGPU_SHADER_LANGUAGE_BINARY 8		AGPU_COMPILATION_ERROR -9		AGPU_TEXTURE_FORMAT_R16G16B16A16_UINT 12		AGPU_FILTER_MIN_LINEAR_MAG_LINEAR_MIPMAP_LINEAR 16r15		AGPU_TEXTURE_FORMAT_ETC2_R8G8B8A8_UNORM 204		AGPU_BLENDING_INVERTED_SRC_1ALPHA 19		AGPU_BLENDING_DEST_ALPHA 7		AGPU_TEXTURE_FORMAT_R16_TYPELESS 53		AGPU_UNIFORM_BUFFER 8		AGPU_TEXTURE_FORMAT_ASTC10X6_UNORM_SRGB 249		AGPU_VR_BUTTON_PROXIMITY_SENSOR 31		AGPU_TEXTURE_3D 5		AGPU_TEXTURE_FORMAT_UNKNOWN 0		AGPU_TEXTURE_FORMAT_R24_UNORM_X8_TYPELESS 46		AGPU_TEXTURE_BUFFER 1		AGPU_VR_DUAL_ANALOG_LEFT 0		AGPU_TEXTURE_FORMAT_D32_FLOAT_S8X24_UINT 20		AGPU_BLENDING_OPERATION_MAX 5		AGPU_CULL_MODE_BACK 2		AGPU_FLOAT 0		AGPU_VR_TRACKED_DEVICE_ROLE_THREADMILL 4		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_UNTOUCH 253		AGPU_TEXTURE_FORMAT_R8_SNORM 63		AGPU_TEXTURE_FORMAT_ASTC4X4_UNORM 230		AGPU_POLYGON_MODE_LINE 1		AGPU_TEXTURE_FORMAT_R16G16B16A16_TYPELESS 9		AGPU_TEXTURE_ADDRESS_MODE_WRAP 1		AGPU_VR_BUTTON_A 7		AGPU_DYNAMIC 1		AGPU_STORAGE_TEXEL_BUFFER 128		AGPU_TEXTURE_FORMAT_A8_UNORM 65		AGPU_TEXTURE_FORMAT_EAC_R11G11_SNORM 209		AGPU_LESS 2		AGPU_SHADER_LANGUAGE_VGLSL 3		AGPU_PATCHES 9		AGPU_VR_BUTTON_GRIP 2		AGPU_TEXTURE_ASPECT_DEPTH 2		AGPU_INVALID_PARAMETER -4		AGPU_TEXTURE_FORMAT_ASTC6X5_UNORM 236		AGPU_TEXTURE_FLAG_DEPTH 2		AGPU_SHADER_BINDING_TYPE_UNIFORM_TEXEL_BUFFER 2		AGPU_GREATER_EQUAL 7		AGPU_TEXTURE_FORMAT_D24_UNORM_S8_UINT 45		AGPU_TEXTURE_FORMAT_D16_UNORM 55		AGPU_NULL_POINTER -2		AGPU_ZERO 1		AGPU_POINTS 0		AGPU_SHADER_BINDING_TYPE_SAMPLED_IMAGE 0		AGPU_DOUBLE 2		AGPU_TEXTURE_FORMAT_R16_SNORM 58		AGPU_VR_TRACKED_DEVICE_ROLE_INVALID 0		AGPU_TEXTURE_FORMAT_BC4_TYPELESS 79		AGPU_LESS_EQUAL 3		AGPU_COLOR_BUFFER_BIT 4		AGPU_TEXTURE_FORMAT_R16G16_FLOAT 34		AGPU_DEVICE_OPEN_FLAG_NONE 0		AGPU_BLENDING_OPERATION_ADD 1		AGPU_MAP_COHERENT_BIT 8		AGPU_FEATURE_VRINPUT_DEVICES 7		AGPU_NOT_EQUAL 5		AGPU_SHADER_BINDING_TYPE_STORAGE_IMAGE 1		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_MOVE 254		AGPU_TEXTURE_FORMAT_R8G8_SINT 52		AGPU_UNSUPPORTED -6		AGPU_TEXTURE_FORMAT_BC2_UNORM_SRGB 75		AGPU_TEXTURE_FORMAT_ASTC8X6_UNORM 242		AGPU_VR_EVENT_TYPE_DUAL_ANALOG_PRESSED 250		AGPU_ATTACHMENT_CLEAR 1		AGPU_FILTER_MIN_LINEAR_MAG_NEAREST_MIPMAP_NEAREST 16r10		AGPU_COMMAND_QUEUE_TYPE_GRAPHICS 0		AGPU_COMMAND_LIST_CLOSED -10		AGPU_VR_BUTTON_STEAM_VR_TRIGGER 33		AGPU_DECREASE_WRAP 7		AGPU_TEXTURE_FORMAT_R32G32B32_UINT 7		AGPU_VR_EVENT_TYPE_TRACKED_DEVICE_USER_INTERACTION_STARTED 103		AGPU_DEVICE_OPEN_FLAG_ALLOW_VR 1		AGPU_VR_BUTTON_SYSTEM 0		AGPU_DRAW_INDIRECT_BUFFER 16		AGPU_VR_EVENT_TYPE_LEAVE_STANDBY_MODE 107		AGPU_VR_BUTTON_KNUCKLES_A 2	)! !AGPUInterface subclass: #AGPUPlatform	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUDevice	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUVrSystem	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUSwapChain	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUComputePipelineBuilder	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUPipelineBuilder	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUPipelineState	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUCommandQueue	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUCommandAllocator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUCommandList	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUTexture	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUBuffer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUVertexBinding	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUVertexLayout	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUShader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUFramebuffer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPURenderpass	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUShaderSignatureBuilder	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUShaderSignature	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUShaderResourceBinding	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUInterface subclass: #AGPUFence	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AbstractGPU-Generated'!AGPUExternalStructure subclass: #AGPUDeviceOpenInfo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUDeviceOpenInfo class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(display 'void*')		(window_system_name 'byte*')		(debug_layer 'long')		(application_name 'byte*')		(application_version 'ulong')		(engine_name 'byte*')		(engine_version 'ulong')		(gpu_index 'long')		(open_flags 'long')		)! !AGPUExternalStructure subclass: #AGPUSwapChainCreateInfo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUSwapChainCreateInfo class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(display 'void*')		(window 'void*')		(window_system_name 'byte*')		(surface 'void*')		(colorbuffer_format 'long')		(depth_stencil_format 'long')		(width 'ulong')		(height 'ulong')		(buffer_count 'ulong')		(sample_buffers 'long')		(samples 'long')		)! !AGPUExternalStructure subclass: #AGPUBufferDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUBufferDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(size 'ulong')		(usage 'long')		(binding 'long')		(mapping_flags 'ulong')		(stride 'ulong')		)! !AGPUExternalStructure subclass: #AGPUTextureDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUTextureDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(type 'long')		(width 'ulong')		(height 'ulong')		(depthOrArraySize 'ushort')		(miplevels 'ushort')		(format 'long')		(flags 'long')		(sample_count 'ulong')		(sample_quality 'ulong')		(upload_buffer 'void*')		(readback_buffer 'void*')		)! !AGPUExternalStructure subclass: #AGPUComponentsSwizzle	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUComponentsSwizzle class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(r 'long')		(g 'long')		(b 'long')		(a 'long')		)! !AGPUExternalStructure subclass: #AGPUSubresourceRange	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUSubresourceRange class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(usage_flags 'long')		(base_miplevel 'ulong')		(level_count 'ulong')		(base_arraylayer 'ulong')		(layer_count 'ulong')		)! !AGPUExternalStructure subclass: #AGPUTextureViewDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUTextureViewDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(type 'long')		(texture 'void*')		(format 'long')		(sample_count 'ulong')		(components 'AGPUComponentsSwizzle')		(subresource_range 'AGPUSubresourceRange')		)! !AGPUExternalStructure subclass: #AGPUDrawElementsCommand	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUDrawElementsCommand class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(index_count 'ulong')		(instance_count 'ulong')		(first_index 'ulong')		(base_vertex 'long')		(base_instance 'ulong')		)! !AGPUExternalStructure subclass: #AGPUVertexAttribDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVertexAttribDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(buffer 'ulong')		(binding 'ulong')		(format 'long')		(rows 'ulong')		(offset 'ulong')		(divisor 'ulong')		)! !AGPUExternalStructure subclass: #AGPUColor4f	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUColor4f class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(r 'float')		(g 'float')		(b 'float')		(a 'float')		)! !AGPUExternalStructure subclass: #AGPUDepthStencilValue	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUDepthStencilValue class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(depth 'float')		(stencil 'byte')		)! !AGPUExternalStructure subclass: #AGPUSamplerDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUSamplerDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(filter 'long')		(address_u 'long')		(address_v 'long')		(address_w 'long')		(mip_lod_bias 'float')		(maxanisotropy 'float')		(comparison_enabled 'long')		(comparison_function 'long')		(border_color 'AGPUColor4f')		(min_lod 'float')		(max_lod 'float')		)! !AGPUExternalStructure subclass: #AGPURenderpassColorAttachmentDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPURenderpassColorAttachmentDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(format 'long')		(sample_count 'ulong')		(begin_action 'long')		(end_action 'long')		(clear_value 'AGPUColor4f')		)! !AGPUExternalStructure subclass: #AGPURenderpassDepthStencilDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPURenderpassDepthStencilDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(format 'long')		(sample_count 'ulong')		(begin_action 'long')		(end_action 'long')		(stencil_begin_action 'long')		(stencil_end_action 'long')		(clear_value 'AGPUDepthStencilValue')		)! !AGPUExternalStructure subclass: #AGPURenderpassDescription	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPURenderpassDescription class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(color_attachment_count 'ulong')		(color_attachments 'AGPURenderpassColorAttachmentDescription*')		(depth_stencil_attachment 'AGPURenderpassDepthStencilDescription*')		)! !AGPUExternalStructure subclass: #AGPUInheritanceInfo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUInheritanceInfo class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(flat 'long')		(renderpass 'void*')		)! !AGPUExternalStructure subclass: #AGPUVector3f	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVector3f class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(x 'float')		(y 'float')		(z 'float')		)! !AGPUExternalStructure subclass: #AGPUVector4f	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVector4f class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(x 'float')		(y 'float')		(z 'float')		(w 'float')		)! !AGPUExternalStructure subclass: #AGPUQuaternionf	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUQuaternionf class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(w 'float')		(x 'float')		(y 'float')		(z 'float')		)! !AGPUExternalStructure subclass: #AGPUMatrix3x3f	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUMatrix3x3f class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(c1 'AGPUVector3f')		(c2 'AGPUVector3f')		(c3 'AGPUVector3f')		)! !AGPUExternalStructure subclass: #AGPUMatrix4x4f	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUMatrix4x4f class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(c1 'AGPUVector4f')		(c2 'AGPUVector4f')		(c3 'AGPUVector4f')		(c4 'AGPUVector4f')		)! !AGPUExternalStructure subclass: #AGPUSize2d	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUSize2d class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(width 'ulong')		(height 'ulong')		)! !AGPUExternalStructure subclass: #AGPUSize3d	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUSize3d class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(width 'ulong')		(height 'ulong')		(depth 'ulong')		)! !AGPUExternalStructure subclass: #AGPUFrustumTangents	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUFrustumTangents class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(left 'float')		(right 'float')		(top 'float')		(bottom 'float')		)! !AGPUExternalStructure subclass: #AGPURegion3d	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPURegion3d class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(x 'ulong')		(y 'ulong')		(z 'ulong')		(width 'ulong')		(height 'ulong')		(depth 'ulong')		)! !AGPUExternalStructure subclass: #AGPUVrTrackedDevicePose	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVrTrackedDevicePose class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(device_id 'ulong')		(device_class 'long')		(device_role 'long')		(device_to_absolute_tracking 'AGPUMatrix4x4f')		(velocity 'AGPUVector3f')		(angular_velocity 'AGPUVector3f')		)! !AGPUExternalStructure subclass: #AGPUVrGenericEvent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVrGenericEvent class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(word1 'ulong')		(word2 'ulong')		(word3 'ulong')		(word4 'ulong')		(word5 'ulong')		(word6 'ulong')		(word7 'ulong')		(word8 'ulong')		)! !AGPUExternalStructure subclass: #AGPUVrControllerEvent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVrControllerEvent class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(button 'ulong')		)! !AGPUExternalStructure subclass: #AGPUVrDualAnalogEvent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVrDualAnalogEvent class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(x 'float')		(y 'float')		(transformed_x 'float')		(transformed_y 'float')		(which 'ulong')		)! !AGPUExternalUnion subclass: #AGPUVrEventData	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVrEventData class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(type 'ulong')		(generic 'AGPUVrGenericEvent')		(controller 'AGPUVrControllerEvent')		(dual_analog 'AGPUVrDualAnalogEvent')		)! !AGPUExternalStructure subclass: #AGPUVrEvent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUVrEvent class methodsFor: 'definition'!fields	"
	self defineFields
	"
	^ #(		(type 'ulong')		(tracked_device_index 'ulong')		(event_age_seconds 'float')		(data 'AGPUVrEventData')		)! !AGPUCBindingsBase subclass: #AGPUCBindings	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: 'AGPUConstants'	category: 'AbstractGPU-Generated'!!AGPUCBindings methodsFor: 'platform'!openDevice_platform: platform openInfo: openInfo	<cdecl: void* 'agpuOpenDevice' (void* AGPUDeviceOpenInfo*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'platform'!getName_platform: platform	<cdecl: byte* 'agpuGetPlatformName' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'platform'!getVersion_platform: platform	<cdecl: long 'agpuGetPlatformVersion' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'platform'!getImplementationVersion_platform: platform	<cdecl: long 'agpuGetPlatformImplementationVersion' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'platform'!hasRealMultithreading_platform: platform	<cdecl: long 'agpuPlatformHasRealMultithreading' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'platform'!isNative_platform: platform	<cdecl: long 'agpuIsNativePlatform' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'platform'!isCrossPlatform_platform: platform	<cdecl: long 'agpuIsCrossPlatform' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!addReference_device: device	<cdecl: long 'agpuAddDeviceReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!release_device: device	<cdecl: long 'agpuReleaseDevice' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!getDefaultCommandQueue_device: device	<cdecl: void* 'agpuGetDefaultCommandQueue' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createSwapChain_device: device commandQueue: commandQueue swapChainInfo: swapChainInfo	<cdecl: void* 'agpuCreateSwapChain' (void* void* AGPUSwapChainCreateInfo*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createBuffer_device: device description: description initial_data: initial_data	<cdecl: void* 'agpuCreateBuffer' (void* AGPUBufferDescription* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createVertexLayout_device: device	<cdecl: void* 'agpuCreateVertexLayout' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createVertexBinding_device: device layout: layout	<cdecl: void* 'agpuCreateVertexBinding' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createShader_device: device type: type	<cdecl: void* 'agpuCreateShader' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createShaderSignatureBuilder_device: device	<cdecl: void* 'agpuCreateShaderSignatureBuilder' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createPipelineBuilder_device: device	<cdecl: void* 'agpuCreatePipelineBuilder' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createComputePipelineBuilder_device: device	<cdecl: void* 'agpuCreateComputePipelineBuilder' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createCommandAllocator_device: device type: type queue: queue	<cdecl: void* 'agpuCreateCommandAllocator' (void* long void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createCommandList_device: device type: type allocator: allocator initial_pipeline_state: initial_pipeline_state	<cdecl: void* 'agpuCreateCommandList' (void* long void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!getPreferredShaderLanguage_device: device	<cdecl: long 'agpuGetPreferredShaderLanguage' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!getPreferredIntermediateShaderLanguage_device: device	<cdecl: long 'agpuGetPreferredIntermediateShaderLanguage' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!getPreferredHighLevelShaderLanguage_device: device	<cdecl: long 'agpuGetPreferredHighLevelShaderLanguage' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createFrameBuffer_device: device width: width height: height colorCount: colorCount colorViews: colorViews depthStencilView: depthStencilView	<cdecl: void* 'agpuCreateFrameBuffer' (void* ulong ulong ulong AGPUTextureViewDescription* AGPUTextureViewDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createRenderPass_device: device description: description	<cdecl: void* 'agpuCreateRenderPass' (void* AGPURenderpassDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createTexture_device: device description: description	<cdecl: void* 'agpuCreateTexture' (void* AGPUTextureDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!createFence_device: device	<cdecl: void* 'agpuCreateFence' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!getMultiSampleQualityLevels_device: device sample_count: sample_count	<cdecl: long 'agpuGetMultiSampleQualityLevels' (void* ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!hasTopLeftNdcOrigin_device: device	<cdecl: long 'agpuHasTopLeftNdcOrigin' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!hasBottomLeftTextureCoordinates_device: device	<cdecl: long 'agpuHasBottomLeftTextureCoordinates' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!isFeatureSupported_device: device feature: feature	<cdecl: long 'agpuIsFeatureSupportedOnDevice' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'device'!getVRSystem_device: device	<cdecl: void* 'agpuGetVRSystem' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!addReference_vr_system: vr_system	<cdecl: long 'agpuAddVRSystemReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!release_vr_system: vr_system	<cdecl: long 'agpuReleaseVRSystem' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getVRSystemName_vr_system: vr_system	<cdecl: byte* 'agpuGetVRSystemName' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getNativeHandle_vr_system: vr_system	<cdecl: void* 'agpuGetVRSystemNativeHandle' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getRecommendedRenderTargetSize_vr_system: vr_system size: size	<cdecl: long 'agpuGetVRRecommendedRenderTargetSize' (void* AGPUSize2d*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getEyeToHeadTransform_vr_system: vr_system eye: eye transform: transform	<cdecl: long 'agpuGetVREyeToHeadTransformInto' (void* long AGPUMatrix4x4f*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getProjectionMatrix_vr_system: vr_system eye: eye near_distance: near_distance far_distance: far_distance projection_matrix: projection_matrix	<cdecl: long 'agpuGetVRProjectionMatrix' (void* long float float AGPUMatrix4x4f*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getProjectionFrustumTangents_vr_system: vr_system eye: eye frustum: frustum	<cdecl: long 'agpuGetVRProjectionFrustumTangents' (void* long AGPUFrustumTangents*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!submitEyeRenderTargets_vr_system: vr_system left_eye: left_eye right_eye: right_eye	<cdecl: long 'agpuSubmitVREyeRenderTargets' (void* void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!waitAndFetchPoses_vr_system: vr_system	<cdecl: long 'agpuWaitAndFetchVRPoses' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getValidTrackedDevicePoseCount_vr_system: vr_system	<cdecl: ulong 'agpuGetValidVRTrackedDevicePoseCount' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getValidTrackedDevicePoseInto_vr_system: vr_system index: index dest: dest	<cdecl: long 'agpuGetValidVRTrackedDevicePoseInto' (void* ulong AGPUVrTrackedDevicePose*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getValidRenderTrackedDevicePoseCount_vr_system: vr_system	<cdecl: ulong 'agpuGetValidVRRenderTrackedDevicePoseCount' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!getValidRenderTrackedDevicePoseInto_vr_system: vr_system index: index dest: dest	<cdecl: long 'agpuGetValidVRRenderTrackedDevicePoseInto' (void* ulong AGPUVrTrackedDevicePose*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vr_system'!pollEvent_vr_system: vr_system event: event	<cdecl: long 'agpuPollVREvent' (void* AGPUVrEvent*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'swap_chain'!addReference_swap_chain: swap_chain	<cdecl: long 'agpuAddSwapChainReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'swap_chain'!release_swap_chain: swap_chain	<cdecl: long 'agpuReleaseSwapChain' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'swap_chain'!swapBuffers_swap_chain: swap_chain	<cdecl: long 'agpuSwapBuffers' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'swap_chain'!getCurrentBackBuffer_swap_chain: swap_chain	<cdecl: void* 'agpuGetCurrentBackBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'swap_chain'!getCurrentBackBufferIndex_swap_chain: swap_chain	<cdecl: ulong 'agpuGetCurrentBackBufferIndex' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'swap_chain'!getFramebufferCount_swap_chain: swap_chain	<cdecl: ulong 'agpuGetFramebufferCount' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!addReference_compute_pipeline_builder: compute_pipeline_builder	<cdecl: long 'agpuAddComputePipelineBuilderReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!release_compute_pipeline_builder: compute_pipeline_builder	<cdecl: long 'agpuReleaseComputePipelineBuilder' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!build_compute_pipeline_builder: compute_pipeline_builder	<cdecl: void* 'agpuBuildComputePipelineState' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!attachShader_compute_pipeline_builder: compute_pipeline_builder shader: shader	<cdecl: long 'agpuAttachComputeShader' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!attachShaderWithEntryPoint_compute_pipeline_builder: compute_pipeline_builder shader: shader type: type entry_point: entry_point	<cdecl: long 'agpuAttachComputeShaderWithEntryPoint' (void* void* long byte*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!getBuildingLogLength_compute_pipeline_builder: compute_pipeline_builder	<cdecl: ulong 'agpuGetComputePipelineBuildingLogLength' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!getBuildingLog_compute_pipeline_builder: compute_pipeline_builder buffer_size: buffer_size buffer: buffer	<cdecl: long 'agpuGetComputePipelineBuildingLog' (void* ulong byte*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'compute_pipeline_builder'!setShaderSignature_compute_pipeline_builder: compute_pipeline_builder signature: signature	<cdecl: long 'agpuSetComputePipelineShaderSignature' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!addReference_pipeline_builder: pipeline_builder	<cdecl: long 'agpuAddPipelineBuilderReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!release_pipeline_builder: pipeline_builder	<cdecl: long 'agpuReleasePipelineBuilder' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!build_pipeline_builder: pipeline_builder	<cdecl: void* 'agpuBuildPipelineState' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!attachShader_pipeline_builder: pipeline_builder shader: shader	<cdecl: long 'agpuAttachShader' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!attachShaderWithEntryPoint_pipeline_builder: pipeline_builder shader: shader type: type entry_point: entry_point	<cdecl: long 'agpuAttachShaderWithEntryPoint' (void* void* long byte*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!getBuildingLogLength_pipeline_builder: pipeline_builder	<cdecl: ulong 'agpuGetPipelineBuildingLogLength' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!getBuildingLog_pipeline_builder: pipeline_builder buffer_size: buffer_size buffer: buffer	<cdecl: long 'agpuGetPipelineBuildingLog' (void* ulong byte*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setBlendState_pipeline_builder: pipeline_builder renderTargetMask: renderTargetMask enabled: enabled	<cdecl: long 'agpuSetBlendState' (void* long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setBlendFunction_pipeline_builder: pipeline_builder renderTargetMask: renderTargetMask sourceFactor: sourceFactor destFactor: destFactor colorOperation: colorOperation sourceAlphaFactor: sourceAlphaFactor destAlphaFactor: destAlphaFactor alphaOperation: alphaOperation	<cdecl: long 'agpuSetBlendFunction' (void* long long long long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setColorMask_pipeline_builder: pipeline_builder renderTargetMask: renderTargetMask redEnabled: redEnabled greenEnabled: greenEnabled blueEnabled: blueEnabled alphaEnabled: alphaEnabled	<cdecl: long 'agpuSetColorMask' (void* long long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setFrontFace_pipeline_builder: pipeline_builder winding: winding	<cdecl: long 'agpuSetFrontFace' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setCullMode_pipeline_builder: pipeline_builder mode: mode	<cdecl: long 'agpuSetCullMode' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setDepthBias_pipeline_builder: pipeline_builder constant_factor: constant_factor clamp: clamp slope_factor: slope_factor	<cdecl: long 'agpuSetDepthBias' (void* float float float)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setDepthState_pipeline_builder: pipeline_builder enabled: enabled writeMask: writeMask function: function	<cdecl: long 'agpuSetDepthState' (void* long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setPolygonMode_pipeline_builder: pipeline_builder mode: mode	<cdecl: long 'agpuSetPolygonMode' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setStencilState_pipeline_builder: pipeline_builder enabled: enabled writeMask: writeMask readMask: readMask	<cdecl: long 'agpuSetStencilState' (void* long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setStencilFrontFace_pipeline_builder: pipeline_builder stencilFailOperation: stencilFailOperation depthFailOperation: depthFailOperation stencilDepthPassOperation: stencilDepthPassOperation stencilFunction: stencilFunction	<cdecl: long 'agpuSetStencilFrontFace' (void* long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setStencilBackFace_pipeline_builder: pipeline_builder stencilFailOperation: stencilFailOperation depthFailOperation: depthFailOperation stencilDepthPassOperation: stencilDepthPassOperation stencilFunction: stencilFunction	<cdecl: long 'agpuSetStencilBackFace' (void* long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setRenderTargetCount_pipeline_builder: pipeline_builder count: count	<cdecl: long 'agpuSetRenderTargetCount' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setRenderTargetFormat_pipeline_builder: pipeline_builder index: index format: format	<cdecl: long 'agpuSetRenderTargetFormat' (void* ulong long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setDepthStencilFormat_pipeline_builder: pipeline_builder format: format	<cdecl: long 'agpuSetDepthStencilFormat' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setPrimitiveType_pipeline_builder: pipeline_builder type: type	<cdecl: long 'agpuSetPrimitiveType' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setVertexLayout_pipeline_builder: pipeline_builder layout: layout	<cdecl: long 'agpuSetVertexLayout' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setShaderSignature_pipeline_builder: pipeline_builder signature: signature	<cdecl: long 'agpuSetPipelineShaderSignature' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_builder'!setSampleDescription_pipeline_builder: pipeline_builder sample_count: sample_count sample_quality: sample_quality	<cdecl: long 'agpuSetSampleDescription' (void* ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_state'!addReference_pipeline_state: pipeline_state	<cdecl: long 'agpuAddPipelineStateReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'pipeline_state'!release_pipeline_state: pipeline_state	<cdecl: long 'agpuReleasePipelineState' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_queue'!addReference_command_queue: command_queue	<cdecl: long 'agpuAddCommandQueueReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_queue'!release_command_queue: command_queue	<cdecl: long 'agpuReleaseCommandQueue' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_queue'!addCommandList_command_queue: command_queue command_list: command_list	<cdecl: long 'agpuAddCommandList' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_queue'!finishExecution_command_queue: command_queue	<cdecl: long 'agpuFinishQueueExecution' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_queue'!signalFence_command_queue: command_queue fence: fence	<cdecl: long 'agpuSignalFence' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_queue'!waitFence_command_queue: command_queue fence: fence	<cdecl: long 'agpuWaitFence' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_allocator'!addReference_command_allocator: command_allocator	<cdecl: long 'agpuAddCommandAllocatorReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_allocator'!release_command_allocator: command_allocator	<cdecl: long 'agpuReleaseCommandAllocator' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_allocator'!reset_command_allocator: command_allocator	<cdecl: long 'agpuResetCommandAllocator' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!addReference_command_list: command_list	<cdecl: long 'agpuAddCommandListReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!release_command_list: command_list	<cdecl: long 'agpuReleaseCommandList' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!setShaderSignature_command_list: command_list signature: signature	<cdecl: long 'agpuSetShaderSignature' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!setViewport_command_list: command_list x: x y: y w: w h: h	<cdecl: long 'agpuSetViewport' (void* long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!setScissor_command_list: command_list x: x y: y w: w h: h	<cdecl: long 'agpuSetScissor' (void* long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!usePipelineState_command_list: command_list pipeline: pipeline	<cdecl: long 'agpuUsePipelineState' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useVertexBinding_command_list: command_list vertex_binding: vertex_binding	<cdecl: long 'agpuUseVertexBinding' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useIndexBuffer_command_list: command_list index_buffer: index_buffer	<cdecl: long 'agpuUseIndexBuffer' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useIndexBufferAt_command_list: command_list index_buffer: index_buffer offset: offset index_size: index_size	<cdecl: long 'agpuUseIndexBufferAt' (void* void* ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useDrawIndirectBuffer_command_list: command_list draw_buffer: draw_buffer	<cdecl: long 'agpuUseDrawIndirectBuffer' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useComputeDispatchIndirectBuffer_command_list: command_list buffer: buffer	<cdecl: long 'agpuUseComputeDispatchIndirectBuffer' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useShaderResources_command_list: command_list binding: binding	<cdecl: long 'agpuUseShaderResources' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!useComputeShaderResources_command_list: command_list binding: binding	<cdecl: long 'agpuUseComputeShaderResources' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!drawArrays_command_list: command_list vertex_count: vertex_count instance_count: instance_count first_vertex: first_vertex base_instance: base_instance	<cdecl: long 'agpuDrawArrays' (void* ulong ulong ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!drawArraysIndirect_command_list: command_list offset: offset drawcount: drawcount	<cdecl: long 'agpuDrawArraysIndirect' (void* ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!drawElements_command_list: command_list index_count: index_count instance_count: instance_count first_index: first_index base_vertex: base_vertex base_instance: base_instance	<cdecl: long 'agpuDrawElements' (void* ulong ulong ulong long ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!drawElementsIndirect_command_list: command_list offset: offset drawcount: drawcount	<cdecl: long 'agpuDrawElementsIndirect' (void* ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!dispatchCompute_command_list: command_list group_count_x: group_count_x group_count_y: group_count_y group_count_z: group_count_z	<cdecl: long 'agpuDispatchCompute' (void* ulong ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!dispatchComputeIndirect_command_list: command_list offset: offset	<cdecl: long 'agpuDispatchComputeIndirect' (void* ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!setStencilReference_command_list: command_list reference: reference	<cdecl: long 'agpuSetStencilReference' (void* ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!executeBundle_command_list: command_list bundle: bundle	<cdecl: long 'agpuExecuteBundle' (void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!close_command_list: command_list	<cdecl: long 'agpuCloseCommandList' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!reset_command_list: command_list allocator: allocator initial_pipeline_state: initial_pipeline_state	<cdecl: long 'agpuResetCommandList' (void* void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!resetBundle_command_list: command_list allocator: allocator initial_pipeline_state: initial_pipeline_state inheritance_info: inheritance_info	<cdecl: long 'agpuResetBundleCommandList' (void* void* void* AGPUInheritanceInfo*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!beginRenderPass_command_list: command_list renderpass: renderpass framebuffer: framebuffer bundle_content: bundle_content	<cdecl: long 'agpuBeginRenderPass' (void* void* void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!endRenderPass_command_list: command_list	<cdecl: long 'agpuEndRenderPass' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!resolveFramebuffer_command_list: command_list destFramebuffer: destFramebuffer sourceFramebuffer: sourceFramebuffer	<cdecl: long 'agpuResolveFramebuffer' (void* void* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!resolveTexture_command_list: command_list sourceTexture: sourceTexture sourceLevel: sourceLevel sourceLayer: sourceLayer destTexture: destTexture destLevel: destLevel destLayer: destLayer levelCount: levelCount layerCount: layerCount aspect: aspect	<cdecl: long 'agpuResolveTexture' (void* void* ulong ulong void* ulong ulong ulong ulong long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'command_list'!pushConstants_command_list: command_list offset: offset size: size values: values	<cdecl: long 'agpuPushConstants' (void* ulong ulong void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!addReference_texture: texture	<cdecl: long 'agpuAddTextureReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!release_texture: texture	<cdecl: long 'agpuReleaseTexture' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!getDescription_texture: texture description: description	<cdecl: long 'agpuGetTextureDescription' (void* AGPUTextureDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!mapLevel_texture: texture level: level arrayIndex: arrayIndex flags: flags region: region	<cdecl: void* 'agpuMapTextureLevel' (void* long long long AGPURegion3d*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!unmapLevel_texture: texture	<cdecl: long 'agpuUnmapTextureLevel' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!readTextureData_texture: texture level: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch buffer: buffer	<cdecl: long 'agpuReadTextureData' (void* long long long long void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!uploadTextureData_texture: texture level: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch data: data	<cdecl: long 'agpuUploadTextureData' (void* long long long long void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!uploadTextureSubData_texture: texture level: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch sourceSize: sourceSize destRegion: destRegion data: data	<cdecl: long 'agpuUploadTextureSubData' (void* long long long long AGPUSize3d* AGPURegion3d* void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!discardUploadBuffer_texture: texture	<cdecl: long 'agpuDiscardTextureUploadBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!discardReadbackBuffer_texture: texture	<cdecl: long 'agpuDiscardTextureReadbackBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'texture'!getFullViewDescription_texture: texture result: result	<cdecl: long 'agpuGetTextureFullViewDescription' (void* AGPUTextureViewDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!addReference_buffer: buffer	<cdecl: long 'agpuAddBufferReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!release_buffer: buffer	<cdecl: long 'agpuReleaseBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!mapBuffer_buffer: buffer flags: flags	<cdecl: void* 'agpuMapBuffer' (void* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!unmapBuffer_buffer: buffer	<cdecl: long 'agpuUnmapBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!getDescription_buffer: buffer description: description	<cdecl: long 'agpuGetBufferDescription' (void* AGPUBufferDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!uploadBufferData_buffer: buffer offset: offset size: size data: data	<cdecl: long 'agpuUploadBufferData' (void* ulong ulong void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!readBufferData_buffer: buffer offset: offset size: size data: data	<cdecl: long 'agpuReadBufferData' (void* ulong ulong void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!flushWholeBuffer_buffer: buffer	<cdecl: long 'agpuFlushWholeBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'buffer'!invalidateWholeBuffer_buffer: buffer	<cdecl: long 'agpuInvalidateWholeBuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_binding'!addReference_vertex_binding: vertex_binding	<cdecl: long 'agpuAddVertexBindingReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_binding'!release_vertex_binding: vertex_binding	<cdecl: long 'agpuReleaseVertexBinding' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_binding'!bindVertexBuffers_vertex_binding: vertex_binding count: count vertex_buffers: vertex_buffers	<cdecl: long 'agpuBindVertexBuffers' (void* ulong void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_binding'!bindVertexBuffersWithOffsets_vertex_binding: vertex_binding count: count vertex_buffers: vertex_buffers offsets: offsets	<cdecl: long 'agpuBindVertexBuffersWithOffsets' (void* ulong void* ulong*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_layout'!addReference_vertex_layout: vertex_layout	<cdecl: long 'agpuAddVertexLayoutReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_layout'!release_vertex_layout: vertex_layout	<cdecl: long 'agpuReleaseVertexLayout' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'vertex_layout'!addVertexAttributeBindings_vertex_layout: vertex_layout vertex_buffer_count: vertex_buffer_count vertex_strides: vertex_strides attribute_count: attribute_count attributes: attributes	<cdecl: long 'agpuAddVertexAttributeBindings' (void* ulong ulong* ulong AGPUVertexAttribDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader'!addReference_shader: shader	<cdecl: long 'agpuAddShaderReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader'!release_shader: shader	<cdecl: long 'agpuReleaseShader' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader'!setShaderSource_shader: shader language: language sourceText: sourceText sourceTextLength: sourceTextLength	<cdecl: long 'agpuSetShaderSource' (void* long byte* long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader'!compileShader_shader: shader options: options	<cdecl: long 'agpuCompileShader' (void* byte*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader'!getCompilationLogLength_shader: shader	<cdecl: ulong 'agpuGetShaderCompilationLogLength' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader'!getCompilationLog_shader: shader buffer_size: buffer_size buffer: buffer	<cdecl: long 'agpuGetShaderCompilationLog' (void* ulong byte*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'framebuffer'!addReference_framebuffer: framebuffer	<cdecl: long 'agpuAddFramebufferReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'framebuffer'!release_framebuffer: framebuffer	<cdecl: long 'agpuReleaseFramebuffer' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'renderpass'!addReference_renderpass: renderpass	<cdecl: long 'agpuAddRenderPassReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'renderpass'!release_renderpass: renderpass	<cdecl: long 'agpuReleaseRenderPass' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'renderpass'!setDepthStencilClearValue_renderpass: renderpass value: value	<cdecl: long 'agpuSetDepthStencilClearValue' (void* AGPUDepthStencilValue)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'renderpass'!setColorClearValue_renderpass: renderpass attachment_index: attachment_index value: value	<cdecl: long 'agpuSetColorClearValue' (void* ulong AGPUColor4f)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'renderpass'!setColorClearValueFrom_renderpass: renderpass attachment_index: attachment_index value: value	<cdecl: long 'agpuSetColorClearValueFrom' (void* ulong AGPUColor4f*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!addReference_shader_signature_builder: shader_signature_builder	<cdecl: long 'agpuAddShaderSignatureBuilderReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!release_shader_signature_builder: shader_signature_builder	<cdecl: long 'agpuReleaseShaderSignatureBuilder' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!build_shader_signature_builder: shader_signature_builder	<cdecl: void* 'agpuBuildShaderSignature' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!addBindingConstant_shader_signature_builder: shader_signature_builder	<cdecl: long 'agpuAddShaderSignatureBindingConstant' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!addBindingElement_shader_signature_builder: shader_signature_builder type: type maxBindings: maxBindings	<cdecl: long 'agpuAddShaderSignatureBindingElement' (void* long ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!beginBindingBank_shader_signature_builder: shader_signature_builder maxBindings: maxBindings	<cdecl: long 'agpuBeginShaderSignatureBindingBank' (void* ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature_builder'!addBindingBankElement_shader_signature_builder: shader_signature_builder type: type bindingPointCount: bindingPointCount	<cdecl: long 'agpuAddShaderSignatureBindingBankElement' (void* long ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature'!addReference_shader_signature: shader_signature	<cdecl: long 'agpuAddShaderSignature' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature'!release_shader_signature: shader_signature	<cdecl: long 'agpuReleaseShaderSignature' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_signature'!createShaderResourceBinding_shader_signature: shader_signature element: element	<cdecl: void* 'agpuCreateShaderResourceBinding' (void* ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!addReference_shader_resource_binding: shader_resource_binding	<cdecl: long 'agpuAddShaderResourceBindingReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!release_shader_resource_binding: shader_resource_binding	<cdecl: long 'agpuReleaseShaderResourceBinding' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindUniformBuffer_shader_resource_binding: shader_resource_binding location: location uniform_buffer: uniform_buffer	<cdecl: long 'agpuBindUniformBuffer' (void* long void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindUniformBufferRange_shader_resource_binding: shader_resource_binding location: location uniform_buffer: uniform_buffer offset: offset size: size	<cdecl: long 'agpuBindUniformBufferRange' (void* long void* ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindStorageBuffer_shader_resource_binding: shader_resource_binding location: location storage_buffer: storage_buffer	<cdecl: long 'agpuBindStorageBuffer' (void* long void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindStorageBufferRange_shader_resource_binding: shader_resource_binding location: location storage_buffer: storage_buffer offset: offset size: size	<cdecl: long 'agpuBindStorageBufferRange' (void* long void* ulong ulong)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindTexture_shader_resource_binding: shader_resource_binding location: location texture: texture startMiplevel: startMiplevel miplevels: miplevels lodclamp: lodclamp	<cdecl: long 'agpuBindTexture' (void* long void* ulong long float)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindTextureArrayRange_shader_resource_binding: shader_resource_binding location: location texture: texture startMiplevel: startMiplevel miplevels: miplevels firstElement: firstElement numberOfElements: numberOfElements lodclamp: lodclamp	<cdecl: long 'agpuBindTextureArrayRange' (void* long void* ulong long long long float)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!bindImage_shader_resource_binding: shader_resource_binding location: location texture: texture level: level layer: layer access: access format: format	<cdecl: long 'agpuBindImage' (void* long void* long long long long)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'shader_resource_binding'!createSampler_shader_resource_binding: shader_resource_binding location: location description: description	<cdecl: long 'agpuCreateSampler' (void* long AGPUSamplerDescription*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'fence'!addReference_fence: fence	<cdecl: long 'agpuAddFenceReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'fence'!release_fence: fence	<cdecl: long 'agpuReleaseFenceReference' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'fence'!waitOnClient_fence: fence	<cdecl: long 'agpuWaitOnClient' (void*)>^ self externalCallFailed! !!AGPUCBindings methodsFor: 'global c functions'!getPlatforms_numplatforms: numplatforms platforms: platforms ret_numplatforms: ret_numplatforms	<cdecl: long 'agpuGetPlatforms' (ulong void* ulong*)>^ self externalCallFailed! !!AGPUPlatform methodsFor: 'wrappers'!openDevice: openInfo	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance openDevice_platform: (self validHandle) openInfo: openInfo.	^ AGPUDevice forHandle: resultValue_! !!AGPUPlatform methodsFor: 'wrappers'!getName	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getName_platform: (self validHandle).	^ resultValue_! !!AGPUPlatform methodsFor: 'wrappers'!getVersion	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getVersion_platform: (self validHandle).	^ resultValue_! !!AGPUPlatform methodsFor: 'wrappers'!getImplementationVersion	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getImplementationVersion_platform: (self validHandle).	^ resultValue_! !!AGPUPlatform methodsFor: 'wrappers'!hasRealMultithreading	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance hasRealMultithreading_platform: (self validHandle).	^ resultValue_! !!AGPUPlatform methodsFor: 'wrappers'!isNative	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance isNative_platform: (self validHandle).	^ resultValue_! !!AGPUPlatform methodsFor: 'wrappers'!isCrossPlatform	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance isCrossPlatform_platform: (self validHandle).	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_device: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_device: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!getDefaultCommandQueue	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getDefaultCommandQueue_device: (self validHandle).	^ AGPUCommandQueue forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createSwapChain: commandQueue swapChainInfo: swapChainInfo	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createSwapChain_device: (self validHandle) commandQueue: (self validHandleOf: commandQueue) swapChainInfo: swapChainInfo.	^ AGPUSwapChain forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createBuffer: description initial_data: initial_data	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createBuffer_device: (self validHandle) description: description initial_data: initial_data.	^ AGPUBuffer forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createVertexLayout	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createVertexLayout_device: (self validHandle).	^ AGPUVertexLayout forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createVertexBinding: layout	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createVertexBinding_device: (self validHandle) layout: (self validHandleOf: layout).	^ AGPUVertexBinding forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createShader: type	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createShader_device: (self validHandle) type: type.	^ AGPUShader forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createShaderSignatureBuilder	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createShaderSignatureBuilder_device: (self validHandle).	^ AGPUShaderSignatureBuilder forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createPipelineBuilder	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createPipelineBuilder_device: (self validHandle).	^ AGPUPipelineBuilder forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createComputePipelineBuilder	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createComputePipelineBuilder_device: (self validHandle).	^ AGPUComputePipelineBuilder forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createCommandAllocator: type queue: queue	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createCommandAllocator_device: (self validHandle) type: type queue: (self validHandleOf: queue).	^ AGPUCommandAllocator forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createCommandList: type allocator: allocator initial_pipeline_state: initial_pipeline_state	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createCommandList_device: (self validHandle) type: type allocator: (self validHandleOf: allocator) initial_pipeline_state: (self validHandleOf: initial_pipeline_state).	^ AGPUCommandList forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!getPreferredShaderLanguage	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getPreferredShaderLanguage_device: (self validHandle).	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!getPreferredIntermediateShaderLanguage	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getPreferredIntermediateShaderLanguage_device: (self validHandle).	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!getPreferredHighLevelShaderLanguage	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getPreferredHighLevelShaderLanguage_device: (self validHandle).	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createFrameBuffer: width height: height colorCount: colorCount colorViews: colorViews depthStencilView: depthStencilView	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createFrameBuffer_device: (self validHandle) width: width height: height colorCount: colorCount colorViews: colorViews depthStencilView: depthStencilView.	^ AGPUFramebuffer forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createRenderPass: description	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createRenderPass_device: (self validHandle) description: description.	^ AGPURenderpass forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createTexture: description	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createTexture_device: (self validHandle) description: description.	^ AGPUTexture forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!createFence	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createFence_device: (self validHandle).	^ AGPUFence forHandle: resultValue_! !!AGPUDevice methodsFor: 'wrappers'!getMultiSampleQualityLevels: sample_count	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getMultiSampleQualityLevels_device: (self validHandle) sample_count: sample_count.	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!hasTopLeftNdcOrigin	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance hasTopLeftNdcOrigin_device: (self validHandle).	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!hasBottomLeftTextureCoordinates	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance hasBottomLeftTextureCoordinates_device: (self validHandle).	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!isFeatureSupported: feature	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance isFeatureSupported_device: (self validHandle) feature: feature.	^ resultValue_! !!AGPUDevice methodsFor: 'wrappers'!getVRSystem	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getVRSystem_device: (self validHandle).	^ AGPUVrSystem forHandle: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_vr_system: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_vr_system: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getVRSystemName	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getVRSystemName_vr_system: (self validHandle).	^ resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getNativeHandle	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getNativeHandle_vr_system: (self validHandle).	^ resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getRecommendedRenderTargetSize: size	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getRecommendedRenderTargetSize_vr_system: (self validHandle) size: size.	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getEyeToHeadTransform: eye transform: transform	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getEyeToHeadTransform_vr_system: (self validHandle) eye: eye transform: transform.	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getProjectionMatrix: eye near_distance: near_distance far_distance: far_distance projection_matrix: projection_matrix	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getProjectionMatrix_vr_system: (self validHandle) eye: eye near_distance: near_distance far_distance: far_distance projection_matrix: projection_matrix.	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getProjectionFrustumTangents: eye frustum: frustum	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getProjectionFrustumTangents_vr_system: (self validHandle) eye: eye frustum: frustum.	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!submitEyeRenderTargets: left_eye right_eye: right_eye	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance submitEyeRenderTargets_vr_system: (self validHandle) left_eye: (self validHandleOf: left_eye) right_eye: (self validHandleOf: right_eye).	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!waitAndFetchPoses	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance waitAndFetchPoses_vr_system: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getValidTrackedDevicePoseCount	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getValidTrackedDevicePoseCount_vr_system: (self validHandle).	^ resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getValidTrackedDevicePoseInto: index dest: dest	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getValidTrackedDevicePoseInto_vr_system: (self validHandle) index: index dest: dest.	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getValidRenderTrackedDevicePoseCount	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getValidRenderTrackedDevicePoseCount_vr_system: (self validHandle).	^ resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!getValidRenderTrackedDevicePoseInto: index dest: dest	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getValidRenderTrackedDevicePoseInto_vr_system: (self validHandle) index: index dest: dest.	self checkErrorCode: resultValue_! !!AGPUVrSystem methodsFor: 'wrappers'!pollEvent: event	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance pollEvent_vr_system: (self validHandle) event: event.	^ resultValue_! !!AGPUSwapChain methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_swap_chain: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUSwapChain methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_swap_chain: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUSwapChain methodsFor: 'wrappers'!swapBuffers	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance swapBuffers_swap_chain: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUSwapChain methodsFor: 'wrappers'!getCurrentBackBuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getCurrentBackBuffer_swap_chain: (self validHandle).	^ AGPUFramebuffer forHandle: resultValue_! !!AGPUSwapChain methodsFor: 'wrappers'!getCurrentBackBufferIndex	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getCurrentBackBufferIndex_swap_chain: (self validHandle).	^ resultValue_! !!AGPUSwapChain methodsFor: 'wrappers'!getFramebufferCount	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getFramebufferCount_swap_chain: (self validHandle).	^ resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_compute_pipeline_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_compute_pipeline_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!build	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance build_compute_pipeline_builder: (self validHandle).	^ AGPUPipelineState forHandle: resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!attachShader: shader	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance attachShader_compute_pipeline_builder: (self validHandle) shader: (self validHandleOf: shader).	self checkErrorCode: resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!attachShaderWithEntryPoint: shader type: type entry_point: entry_point	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance attachShaderWithEntryPoint_compute_pipeline_builder: (self validHandle) shader: (self validHandleOf: shader) type: type entry_point: entry_point.	self checkErrorCode: resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!getBuildingLogLength	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getBuildingLogLength_compute_pipeline_builder: (self validHandle).	^ resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!getBuildingLog: buffer_size buffer: buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getBuildingLog_compute_pipeline_builder: (self validHandle) buffer_size: buffer_size buffer: buffer.	self checkErrorCode: resultValue_! !!AGPUComputePipelineBuilder methodsFor: 'wrappers'!setShaderSignature: signature	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setShaderSignature_compute_pipeline_builder: (self validHandle) signature: (self validHandleOf: signature).	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_pipeline_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_pipeline_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!build	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance build_pipeline_builder: (self validHandle).	^ AGPUPipelineState forHandle: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!attachShader: shader	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance attachShader_pipeline_builder: (self validHandle) shader: (self validHandleOf: shader).	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!attachShaderWithEntryPoint: shader type: type entry_point: entry_point	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance attachShaderWithEntryPoint_pipeline_builder: (self validHandle) shader: (self validHandleOf: shader) type: type entry_point: entry_point.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!getBuildingLogLength	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getBuildingLogLength_pipeline_builder: (self validHandle).	^ resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!getBuildingLog: buffer_size buffer: buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getBuildingLog_pipeline_builder: (self validHandle) buffer_size: buffer_size buffer: buffer.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setBlendState: renderTargetMask enabled: enabled	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setBlendState_pipeline_builder: (self validHandle) renderTargetMask: renderTargetMask enabled: enabled.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setBlendFunction: renderTargetMask sourceFactor: sourceFactor destFactor: destFactor colorOperation: colorOperation sourceAlphaFactor: sourceAlphaFactor destAlphaFactor: destAlphaFactor alphaOperation: alphaOperation	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setBlendFunction_pipeline_builder: (self validHandle) renderTargetMask: renderTargetMask sourceFactor: sourceFactor destFactor: destFactor colorOperation: colorOperation sourceAlphaFactor: sourceAlphaFactor destAlphaFactor: destAlphaFactor alphaOperation: alphaOperation.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setColorMask: renderTargetMask redEnabled: redEnabled greenEnabled: greenEnabled blueEnabled: blueEnabled alphaEnabled: alphaEnabled	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setColorMask_pipeline_builder: (self validHandle) renderTargetMask: renderTargetMask redEnabled: redEnabled greenEnabled: greenEnabled blueEnabled: blueEnabled alphaEnabled: alphaEnabled.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setFrontFace: winding	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setFrontFace_pipeline_builder: (self validHandle) winding: winding.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setCullMode: mode	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setCullMode_pipeline_builder: (self validHandle) mode: mode.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setDepthBias: constant_factor clamp: clamp slope_factor: slope_factor	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setDepthBias_pipeline_builder: (self validHandle) constant_factor: constant_factor clamp: clamp slope_factor: slope_factor.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setDepthState: enabled writeMask: writeMask function: function	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setDepthState_pipeline_builder: (self validHandle) enabled: enabled writeMask: writeMask function: function.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setPolygonMode: mode	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setPolygonMode_pipeline_builder: (self validHandle) mode: mode.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setStencilState: enabled writeMask: writeMask readMask: readMask	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setStencilState_pipeline_builder: (self validHandle) enabled: enabled writeMask: writeMask readMask: readMask.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setStencilFrontFace: stencilFailOperation depthFailOperation: depthFailOperation stencilDepthPassOperation: stencilDepthPassOperation stencilFunction: stencilFunction	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setStencilFrontFace_pipeline_builder: (self validHandle) stencilFailOperation: stencilFailOperation depthFailOperation: depthFailOperation stencilDepthPassOperation: stencilDepthPassOperation stencilFunction: stencilFunction.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setStencilBackFace: stencilFailOperation depthFailOperation: depthFailOperation stencilDepthPassOperation: stencilDepthPassOperation stencilFunction: stencilFunction	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setStencilBackFace_pipeline_builder: (self validHandle) stencilFailOperation: stencilFailOperation depthFailOperation: depthFailOperation stencilDepthPassOperation: stencilDepthPassOperation stencilFunction: stencilFunction.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setRenderTargetCount: count	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setRenderTargetCount_pipeline_builder: (self validHandle) count: count.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setRenderTargetFormat: index format: format	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setRenderTargetFormat_pipeline_builder: (self validHandle) index: index format: format.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setDepthStencilFormat: format	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setDepthStencilFormat_pipeline_builder: (self validHandle) format: format.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setPrimitiveType: type	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setPrimitiveType_pipeline_builder: (self validHandle) type: type.	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setVertexLayout: layout	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setVertexLayout_pipeline_builder: (self validHandle) layout: (self validHandleOf: layout).	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setShaderSignature: signature	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setShaderSignature_pipeline_builder: (self validHandle) signature: (self validHandleOf: signature).	self checkErrorCode: resultValue_! !!AGPUPipelineBuilder methodsFor: 'wrappers'!setSampleDescription: sample_count sample_quality: sample_quality	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setSampleDescription_pipeline_builder: (self validHandle) sample_count: sample_count sample_quality: sample_quality.	self checkErrorCode: resultValue_! !!AGPUPipelineState methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_pipeline_state: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUPipelineState methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_pipeline_state: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandQueue methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_command_queue: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandQueue methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_command_queue: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandQueue methodsFor: 'wrappers'!addCommandList: command_list	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addCommandList_command_queue: (self validHandle) command_list: (self validHandleOf: command_list).	self checkErrorCode: resultValue_! !!AGPUCommandQueue methodsFor: 'wrappers'!finishExecution	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance finishExecution_command_queue: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandQueue methodsFor: 'wrappers'!signalFence: fence	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance signalFence_command_queue: (self validHandle) fence: (self validHandleOf: fence).	self checkErrorCode: resultValue_! !!AGPUCommandQueue methodsFor: 'wrappers'!waitFence: fence	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance waitFence_command_queue: (self validHandle) fence: (self validHandleOf: fence).	self checkErrorCode: resultValue_! !!AGPUCommandAllocator methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_command_allocator: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandAllocator methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_command_allocator: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandAllocator methodsFor: 'wrappers'!reset	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance reset_command_allocator: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_command_list: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_command_list: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!setShaderSignature: signature	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setShaderSignature_command_list: (self validHandle) signature: (self validHandleOf: signature).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!setViewport: x y: y w: w h: h	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setViewport_command_list: (self validHandle) x: x y: y w: w h: h.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!setScissor: x y: y w: w h: h	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setScissor_command_list: (self validHandle) x: x y: y w: w h: h.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!usePipelineState: pipeline	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance usePipelineState_command_list: (self validHandle) pipeline: (self validHandleOf: pipeline).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useVertexBinding: vertex_binding	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useVertexBinding_command_list: (self validHandle) vertex_binding: (self validHandleOf: vertex_binding).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useIndexBuffer: index_buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useIndexBuffer_command_list: (self validHandle) index_buffer: (self validHandleOf: index_buffer).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useIndexBufferAt: index_buffer offset: offset index_size: index_size	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useIndexBufferAt_command_list: (self validHandle) index_buffer: (self validHandleOf: index_buffer) offset: offset index_size: index_size.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useDrawIndirectBuffer: draw_buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useDrawIndirectBuffer_command_list: (self validHandle) draw_buffer: (self validHandleOf: draw_buffer).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useComputeDispatchIndirectBuffer: buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useComputeDispatchIndirectBuffer_command_list: (self validHandle) buffer: (self validHandleOf: buffer).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useShaderResources: binding	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useShaderResources_command_list: (self validHandle) binding: (self validHandleOf: binding).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!useComputeShaderResources: binding	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance useComputeShaderResources_command_list: (self validHandle) binding: (self validHandleOf: binding).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!drawArrays: vertex_count instance_count: instance_count first_vertex: first_vertex base_instance: base_instance	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance drawArrays_command_list: (self validHandle) vertex_count: vertex_count instance_count: instance_count first_vertex: first_vertex base_instance: base_instance.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!drawArraysIndirect: offset drawcount: drawcount	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance drawArraysIndirect_command_list: (self validHandle) offset: offset drawcount: drawcount.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!drawElements: index_count instance_count: instance_count first_index: first_index base_vertex: base_vertex base_instance: base_instance	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance drawElements_command_list: (self validHandle) index_count: index_count instance_count: instance_count first_index: first_index base_vertex: base_vertex base_instance: base_instance.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!drawElementsIndirect: offset drawcount: drawcount	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance drawElementsIndirect_command_list: (self validHandle) offset: offset drawcount: drawcount.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!dispatchCompute: group_count_x group_count_y: group_count_y group_count_z: group_count_z	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance dispatchCompute_command_list: (self validHandle) group_count_x: group_count_x group_count_y: group_count_y group_count_z: group_count_z.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!dispatchComputeIndirect: offset	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance dispatchComputeIndirect_command_list: (self validHandle) offset: offset.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!setStencilReference: reference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setStencilReference_command_list: (self validHandle) reference: reference.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!executeBundle: bundle	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance executeBundle_command_list: (self validHandle) bundle: (self validHandleOf: bundle).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!close	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance close_command_list: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!reset: allocator initial_pipeline_state: initial_pipeline_state	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance reset_command_list: (self validHandle) allocator: (self validHandleOf: allocator) initial_pipeline_state: (self validHandleOf: initial_pipeline_state).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!resetBundle: allocator initial_pipeline_state: initial_pipeline_state inheritance_info: inheritance_info	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance resetBundle_command_list: (self validHandle) allocator: (self validHandleOf: allocator) initial_pipeline_state: (self validHandleOf: initial_pipeline_state) inheritance_info: inheritance_info.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!beginRenderPass: renderpass framebuffer: framebuffer bundle_content: bundle_content	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance beginRenderPass_command_list: (self validHandle) renderpass: (self validHandleOf: renderpass) framebuffer: (self validHandleOf: framebuffer) bundle_content: bundle_content.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!endRenderPass	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance endRenderPass_command_list: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!resolveFramebuffer: destFramebuffer sourceFramebuffer: sourceFramebuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance resolveFramebuffer_command_list: (self validHandle) destFramebuffer: (self validHandleOf: destFramebuffer) sourceFramebuffer: (self validHandleOf: sourceFramebuffer).	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!resolveTexture: sourceTexture sourceLevel: sourceLevel sourceLayer: sourceLayer destTexture: destTexture destLevel: destLevel destLayer: destLayer levelCount: levelCount layerCount: layerCount aspect: aspect	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance resolveTexture_command_list: (self validHandle) sourceTexture: (self validHandleOf: sourceTexture) sourceLevel: sourceLevel sourceLayer: sourceLayer destTexture: (self validHandleOf: destTexture) destLevel: destLevel destLayer: destLayer levelCount: levelCount layerCount: layerCount aspect: aspect.	self checkErrorCode: resultValue_! !!AGPUCommandList methodsFor: 'wrappers'!pushConstants: offset size: size values: values	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance pushConstants_command_list: (self validHandle) offset: offset size: size values: values.	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_texture: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_texture: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!getDescription: description	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getDescription_texture: (self validHandle) description: description.	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!mapLevel: level arrayIndex: arrayIndex flags: flags region: region	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance mapLevel_texture: (self validHandle) level: level arrayIndex: arrayIndex flags: flags region: region.	^ resultValue_! !!AGPUTexture methodsFor: 'wrappers'!unmapLevel	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance unmapLevel_texture: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!readTextureData: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch buffer: buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance readTextureData_texture: (self validHandle) level: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch buffer: buffer.	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!uploadTextureData: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch data: data	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance uploadTextureData_texture: (self validHandle) level: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch data: data.	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!uploadTextureSubData: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch sourceSize: sourceSize destRegion: destRegion data: data	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance uploadTextureSubData_texture: (self validHandle) level: level arrayIndex: arrayIndex pitch: pitch slicePitch: slicePitch sourceSize: sourceSize destRegion: destRegion data: data.	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!discardUploadBuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance discardUploadBuffer_texture: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!discardReadbackBuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance discardReadbackBuffer_texture: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUTexture methodsFor: 'wrappers'!getFullViewDescription: result	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getFullViewDescription_texture: (self validHandle) result: result.	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_buffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_buffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!mapBuffer: flags	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance mapBuffer_buffer: (self validHandle) flags: flags.	^ resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!unmapBuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance unmapBuffer_buffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!getDescription: description	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getDescription_buffer: (self validHandle) description: description.	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!uploadBufferData: offset size: size data: data	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance uploadBufferData_buffer: (self validHandle) offset: offset size: size data: data.	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!readBufferData: offset size: size data: data	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance readBufferData_buffer: (self validHandle) offset: offset size: size data: data.	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!flushWholeBuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance flushWholeBuffer_buffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUBuffer methodsFor: 'wrappers'!invalidateWholeBuffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance invalidateWholeBuffer_buffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVertexBinding methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_vertex_binding: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVertexBinding methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_vertex_binding: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVertexBinding methodsFor: 'wrappers'!bindVertexBuffers: count vertex_buffers: vertex_buffers	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindVertexBuffers_vertex_binding: (self validHandle) count: count vertex_buffers: vertex_buffers.	self checkErrorCode: resultValue_! !!AGPUVertexBinding methodsFor: 'wrappers'!bindVertexBuffersWithOffsets: count vertex_buffers: vertex_buffers offsets: offsets	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindVertexBuffersWithOffsets_vertex_binding: (self validHandle) count: count vertex_buffers: vertex_buffers offsets: offsets.	self checkErrorCode: resultValue_! !!AGPUVertexLayout methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_vertex_layout: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVertexLayout methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_vertex_layout: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUVertexLayout methodsFor: 'wrappers'!addVertexAttributeBindings: vertex_buffer_count vertex_strides: vertex_strides attribute_count: attribute_count attributes: attributes	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addVertexAttributeBindings_vertex_layout: (self validHandle) vertex_buffer_count: vertex_buffer_count vertex_strides: vertex_strides attribute_count: attribute_count attributes: attributes.	self checkErrorCode: resultValue_! !!AGPUShader methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_shader: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShader methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_shader: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShader methodsFor: 'wrappers'!setShaderSource: language sourceText: sourceText sourceTextLength: sourceTextLength	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setShaderSource_shader: (self validHandle) language: language sourceText: sourceText sourceTextLength: sourceTextLength.	self checkErrorCode: resultValue_! !!AGPUShader methodsFor: 'wrappers'!compileShader: options	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance compileShader_shader: (self validHandle) options: options.	self checkErrorCode: resultValue_! !!AGPUShader methodsFor: 'wrappers'!getCompilationLogLength	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getCompilationLogLength_shader: (self validHandle).	^ resultValue_! !!AGPUShader methodsFor: 'wrappers'!getCompilationLog: buffer_size buffer: buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getCompilationLog_shader: (self validHandle) buffer_size: buffer_size buffer: buffer.	self checkErrorCode: resultValue_! !!AGPUFramebuffer methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_framebuffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUFramebuffer methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_framebuffer: (self validHandle).	self checkErrorCode: resultValue_! !!AGPURenderpass methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_renderpass: (self validHandle).	self checkErrorCode: resultValue_! !!AGPURenderpass methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_renderpass: (self validHandle).	self checkErrorCode: resultValue_! !!AGPURenderpass methodsFor: 'wrappers'!setDepthStencilClearValue: value	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setDepthStencilClearValue_renderpass: (self validHandle) value: value.	self checkErrorCode: resultValue_! !!AGPURenderpass methodsFor: 'wrappers'!setColorClearValue: attachment_index value: value	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setColorClearValue_renderpass: (self validHandle) attachment_index: attachment_index value: value.	self checkErrorCode: resultValue_! !!AGPURenderpass methodsFor: 'wrappers'!setColorClearValueFrom: attachment_index value: value	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance setColorClearValueFrom_renderpass: (self validHandle) attachment_index: attachment_index value: value.	self checkErrorCode: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_shader_signature_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_shader_signature_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!build	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance build_shader_signature_builder: (self validHandle).	^ AGPUShaderSignature forHandle: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!addBindingConstant	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addBindingConstant_shader_signature_builder: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!addBindingElement: type maxBindings: maxBindings	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addBindingElement_shader_signature_builder: (self validHandle) type: type maxBindings: maxBindings.	self checkErrorCode: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!beginBindingBank: maxBindings	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance beginBindingBank_shader_signature_builder: (self validHandle) maxBindings: maxBindings.	self checkErrorCode: resultValue_! !!AGPUShaderSignatureBuilder methodsFor: 'wrappers'!addBindingBankElement: type bindingPointCount: bindingPointCount	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addBindingBankElement_shader_signature_builder: (self validHandle) type: type bindingPointCount: bindingPointCount.	self checkErrorCode: resultValue_! !!AGPUShaderSignature methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_shader_signature: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderSignature methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_shader_signature: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderSignature methodsFor: 'wrappers'!createShaderResourceBinding: element	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createShaderResourceBinding_shader_signature: (self validHandle) element: element.	^ AGPUShaderResourceBinding forHandle: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_shader_resource_binding: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_shader_resource_binding: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindUniformBuffer: location uniform_buffer: uniform_buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindUniformBuffer_shader_resource_binding: (self validHandle) location: location uniform_buffer: (self validHandleOf: uniform_buffer).	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindUniformBufferRange: location uniform_buffer: uniform_buffer offset: offset size: size	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindUniformBufferRange_shader_resource_binding: (self validHandle) location: location uniform_buffer: (self validHandleOf: uniform_buffer) offset: offset size: size.	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindStorageBuffer: location storage_buffer: storage_buffer	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindStorageBuffer_shader_resource_binding: (self validHandle) location: location storage_buffer: (self validHandleOf: storage_buffer).	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindStorageBufferRange: location storage_buffer: storage_buffer offset: offset size: size	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindStorageBufferRange_shader_resource_binding: (self validHandle) location: location storage_buffer: (self validHandleOf: storage_buffer) offset: offset size: size.	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindTexture: location texture: texture startMiplevel: startMiplevel miplevels: miplevels lodclamp: lodclamp	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindTexture_shader_resource_binding: (self validHandle) location: location texture: (self validHandleOf: texture) startMiplevel: startMiplevel miplevels: miplevels lodclamp: lodclamp.	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindTextureArrayRange: location texture: texture startMiplevel: startMiplevel miplevels: miplevels firstElement: firstElement numberOfElements: numberOfElements lodclamp: lodclamp	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindTextureArrayRange_shader_resource_binding: (self validHandle) location: location texture: (self validHandleOf: texture) startMiplevel: startMiplevel miplevels: miplevels firstElement: firstElement numberOfElements: numberOfElements lodclamp: lodclamp.	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!bindImage: location texture: texture level: level layer: layer access: access format: format	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance bindImage_shader_resource_binding: (self validHandle) location: location texture: (self validHandleOf: texture) level: level layer: layer access: access format: format.	self checkErrorCode: resultValue_! !!AGPUShaderResourceBinding methodsFor: 'wrappers'!createSampler: location description: description	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance createSampler_shader_resource_binding: (self validHandle) location: location description: description.	self checkErrorCode: resultValue_! !!AGPUFence methodsFor: 'wrappers'!addReference	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance addReference_fence: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUFence methodsFor: 'wrappers'!primitiveRelease	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance release_fence: (self validHandle).	self checkErrorCode: resultValue_! !!AGPUFence methodsFor: 'wrappers'!waitOnClient	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance waitOnClient_fence: (self validHandle).	self checkErrorCode: resultValue_! !!AGPU methodsFor: '*AbstractGPU-Generated'!getPlatforms: numplatforms platforms: platforms ret_numplatforms: ret_numplatforms	| resultValue_ |	resultValue_ := AGPUCBindings uniqueInstance getPlatforms_numplatforms: numplatforms platforms: platforms ret_numplatforms: ret_numplatforms.	self checkErrorCode: resultValue_! !AGPUConstants initialize.!AGPUDeviceOpenInfo defineFields.!AGPUSwapChainCreateInfo defineFields.!AGPUBufferDescription defineFields.!AGPUTextureDescription defineFields.!AGPUComponentsSwizzle defineFields.!AGPUSubresourceRange defineFields.!AGPUTextureViewDescription defineFields.!AGPUDrawElementsCommand defineFields.!AGPUVertexAttribDescription defineFields.!AGPUColor4f defineFields.!AGPUDepthStencilValue defineFields.!AGPUSamplerDescription defineFields.!AGPURenderpassColorAttachmentDescription defineFields.!AGPURenderpassDepthStencilDescription defineFields.!AGPURenderpassDescription defineFields.!AGPUInheritanceInfo defineFields.!AGPUVector3f defineFields.!AGPUVector4f defineFields.!AGPUQuaternionf defineFields.!AGPUMatrix3x3f defineFields.!AGPUMatrix4x4f defineFields.!AGPUSize2d defineFields.!AGPUSize3d defineFields.!AGPUFrustumTangents defineFields.!AGPURegion3d defineFields.!AGPUVrTrackedDevicePose defineFields.!AGPUVrGenericEvent defineFields.!AGPUVrControllerEvent defineFields.!AGPUVrDualAnalogEvent defineFields.!AGPUVrEventData defineFields.!AGPUVrEvent defineFields.!